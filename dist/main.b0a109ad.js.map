{"version":3,"sources":["src/components/functions/canvas.ts","src/components/classes/math/vector.ts","src/components/classes/systems/sound.ts","src/components/classes/dungeons/dungeons.ts","src/components/classes/dungeons/dungeonOne.ts","src/components/classes/dungeons/dungeonTwo.ts","src/components/classes/dungeons/dungeonThree.ts","src/components/classes/dungeons/dungeonFour.ts","src/components/classes/dungeons/dungeonFive.ts","src/components/classes/dungeons/dungeonSix.ts","src/components/classes/dungeons/dungeonSeven.ts","src/components/classes/dungeons/dungeonEight.ts","src/components/classes/dungeons/dungeonNine.ts","src/components/classes/systems/inventory.ts","src/components/overworld.ts","src/components/classes/systems/gameState.ts","src/components/classes/actors/link.ts","src/components/functions/getImage.ts","src/components/classes/systems/camera.ts","src/components/classes/systems/hud.ts","src/components/objects/decorators.ts","src/components/classes/systems/pauseScreen.ts","src/components/classes/systems/SpriteSheet.ts","src/components/classes/systems/message.ts","src/components/classes/systems/controls.ts","src/components/classes/systems/messageQueue.ts","src/components/classes/systems/controlsConfig.ts","src/components/objects/config.ts","src/components/Collisions/modules/BVHBranch.js","src/components/Collisions/modules/BVH.js","src/components/Collisions/modules/Result.js","src/components/Collisions/modules/SAT.js","src/components/Collisions/modules/Body.js","src/components/Collisions/modules/Circle.js","src/components/Collisions/modules/Polygon.js","src/components/Collisions/modules/Point.js","src/components/Collisions/Collisions.js","src/components/classes/systems/collisionSystem.ts","src/components/functions/showScreenGrid.ts","src/components/functions/createTileMap.ts","src/components/classes/systems/game.ts","src/components/functions/getjson.ts","src/main.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["branch_pool","BVHBranch","constructor","_bvh_parent","_bvh_branch","_bvh_left","_bvh_right","_bvh_sort","_bvh_min_x","_bvh_min_y","_bvh_max_x","_bvh_max_y","getBranch","length","pop","releaseBranch","branch","push","sortBranches","a","b","sort","BVH","_hierarchy","_bodies","_dirty_branches","insert","body","updating","bvh","_bvh","Error","polygon","_polygon","body_x","x","body_y","y","_dirty_coords","_x","_y","angle","_angle","scale_x","_scale_x","scale_y","_scale_y","_calculateCoords","padding","_bvh_padding","radius","scale","body_min_x","_min_x","body_min_y","_min_y","body_max_x","_max_x","body_max_y","_max_y","current","left","left_min_y","left_max_x","left_max_y","left_new_min_x","left_new_min_y","left_new_max_x","left_new_max_y","left_volume","left_new_volume","left_difference","right","right_min_x","right_min_y","right_max_x","right_max_y","right_new_min_x","right_new_min_y","right_new_max_x","right_new_max_y","right_volume","right_new_volume","right_difference","grandparent","parent_min_x","parent_min_y","parent_max_x","parent_max_y","new_parent","remove","splice","indexOf","parent","parent_left","sibling","left_min_x","update","bodies","count","i","min_x","min_y","max_x","max_y","potentials","results","traverse_left","draw","context","drawBVH","moveTo","lineTo","Result","collision","a_in_b","b_in_a","overlap","overlap_x","overlap_y","SAT","result","aabb","a_polygon","b_polygon","aabbAABB","_dirty_normals","_calculateNormals","polygonPolygon","polygonCircle","circleCircle","a_x","a_y","a_radius","a_min_x","a_min_y","a_max_x","a_max_y","b_x","b_y","b_radius","b_min_x","b_min_y","b_max_x","b_max_y","a_count","_coords","b_count","a_coords","b_coords","a_normals","_normals","b_normals","ix","iy","separatingAxis","reverse","a_edges","_edges","b_radius2","radius_squared","coord_x","coord_y","length_squared","Math","sqrt","edge_x","edge_y","dot","region","tmp_overlapping","tmp_overlap","tmp_overlap_x","tmp_overlap_y","other_x","other_y","coord2_x","coord2_y","edge2_x","edge2_y","dot2","region2","target_x","target_y","normal_x","normal_y","absolute_length","difference_x","difference_y","radius_sum","a_start","a_end","b_start","b_end","option1","option2","current_overlap","absolute_overlap","sign","Body","_circle","_point","collides","target","createResult","Circle","arc","PI","Polygon","points","_points","prototype","setPoints","call","coords","new_points","Float64Array","new_point","cos","sin","tmp_x","tmp_y","edges","normals","next","Point","undefined","Collisions","createCircle","createPolygon","createPoint","source","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","window","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.b0a109ad.js","sourceRoot":"..","sourcesContent":["/**\r\n *\r\n *\r\n */\r\nlet makeCanvas=()=>document.createElement('canvas');\r\nexport default makeCanvas","/**\r\n * @class Vector\r\n * @param x - Contains the x Value for the vector\r\n * @param y - Contains the y Value for the Vector\r\n * @method add - Adds Two Vectors Together X+X Y+Y\r\n * @method mult - Multiplies Either Two Vecors (X * X , Y * Y) or by a scala (X * S , Y * S)\r\n * @method div - The inverse of Mult Divides Either by a Vector or a Scala!\r\n * @method limit -Forces the Magnatude of the vector to a specified number if it is greater\r\n */\r\nexport class Vector {\r\n    x: number;\r\n    y: number;\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x || 0;\r\n        this.y = y || 0;\r\n    }\r\n    add(v: Vector) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n    }\r\n    addX(v: Vector) {\r\n        this.x += v.x;\r\n    }\r\n    addY(v: Vector) {\r\n        this.y += v.y;\r\n    }\r\n\r\n    subtract(v: Vector) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n    }\r\n    subtractX(v: Vector) {\r\n        this.x -= v.x;\r\n    }\r\n    subtractY(v: Vector) {\r\n        this.y -= v.y;\r\n    }\r\n    mult(factor: Vector | number) {\r\n        if (factor instanceof Vector) {\r\n            this.x *= factor.x;\r\n            this.y *= factor.y;\r\n        } else {\r\n            this.x *= factor;\r\n            this.y *= factor;\r\n        }\r\n    }\r\n\r\n    div(divisor: Vector | number) {\r\n        if (divisor instanceof Vector) {\r\n            this.x /= divisor.x;\r\n            this.y /= divisor.y;\r\n        } else {\r\n            this.x /= divisor;\r\n            this.y /= divisor;\r\n        }\r\n    }\r\n    distanceX(v: Vector) {\r\n        return this.x - v.x;\r\n    }\r\n    distanceY(v: Vector) {\r\n        return this.y - v.y;\r\n    }\r\n    distance(v: Vector) {\r\n        return Math.sqrt(this.distanceSq(v));\r\n    }\r\n    distanceSq(v: Vector) {\r\n        let dx = this.distanceX(v);\r\n        let dy = this.distanceY(v);\r\n        return dx * dx + dy * dy;\r\n    }\r\n\r\n    limit(max: number) {\r\n        let mSq = this.x * this.x + this.y * this.y;\r\n        if (mSq > max * max) {\r\n            this.div(Math.sqrt(mSq)); //normalize it\r\n            this.mult(max);\r\n        }\r\n        return this;\r\n    }\r\n    same(Other: Vector) {\r\n            if (Other.x === this.x && Other.y === this.y) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n    }\r\n}\r\n","/**\r\n *\r\n *\r\n * @param {string} src\r\n * @this sound\r\n */\r\nexport default class sound{\r\n      sound: any;\r\n      constructor(src: string) {\r\n      this.sound = document.createElement(\"audio\") as HTMLAudioElement\r\n      this.sound.src = src;\r\n      this.sound.setAttribute(\"preload\", \"auto\");\r\n      this.sound.setAttribute(\"controls\", \"none\");\r\n      this.sound.setAttribute('loop',true)\r\n      this.sound.style.display = \"none\";\r\n    } \r\n    addSound(){\r\n      document.body.appendChild(this.sound);\r\n    }  \r\n    play(){\r\n      this.sound.play();\r\n    }\r\n    stop(){\r\n      this.sound.load()\r\n      this.sound.pause();\r\n    }\r\n}","import { Vector } from \"../math/vector\";\r\nimport sound from \"../systems/sound\";\r\n\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class Dungeon\r\n */\r\nexport default class Dungeon {\r\n    name: string;\r\n    keys: Array<any>;\r\n    miniboss: boolean;\r\n    item: boolean;\r\n    lockedDoors: any[];\r\n    rooms: any[];\r\n    visitedRooms: any[];\r\n    boss: boolean;\r\n    treasures: string[];\r\n    position: Vector;\r\n    url: string;\r\n    theme: sound;\r\n    constructor(name: string,equipment:string[]) {\r\n        this.name = name;\r\n        this.position = new Vector();\r\n        this.url = \"\"\r\n        this.keys = [];\r\n        this.miniboss = false;\r\n        this.item = false;\r\n        this.lockedDoors = [];\r\n        this.rooms = [];\r\n        this.visitedRooms = [];\r\n        this.boss = false;\r\n        this.treasures=equipment\r\n        this.theme = new sound('../music/Labyrinth.mp3')\r\n    }\r\n}\r\n","import Dungeon from  \"./dungeons\"\r\nimport { Vector } from \"../math/vector\";\r\nimport gameState from \"../systems/gameState\";\r\n\r\nexport default class firstDungeon extends Dungeon{\r\nconstructor(){\r\n  super('firstDungeon',[\"map\",\"compas\",\"bow\",\"boomerang\",\"heartContainer\",\"shardOne\"])\r\n  this.position = new Vector(2,5);\r\n  this.url = \"https://raw.githubusercontent.com/miaklwalker/thelegendofzelda/master/images/dungeons/zelda-dungeon1.png\"\r\n}\r\ngoToOverworld(position:Vector,gameState:gameState){\r\n  let exit = [2,5,7.5,9];\r\n  const [x,y,px,py] = exit\r\n  if(this.position.x===x&&this.position.y===y&&position.x>=px&&position.y>=py){\r\n    gameState.Map = 0\r\n    this.theme.stop()\r\n    gameState.currentMap.theme.play()\r\n    position.x = 7\r\n    position.y = 5\r\n  }\r\n}\r\n}","import Dungeon from \"./dungeons\";\r\nimport { Vector } from \"../math/vector\";\r\nimport gameState from \"../systems/gameState\";\r\n\r\nexport default class secondDungeon extends Dungeon{\r\n  constructor(){\r\n    super('secondDungeon',[\"map\",\"compas\",\"magicalBoomerang\",\"heartContainer\",\"shardTwo\"])\r\n    this.position = new Vector(1,7);\r\n    this.url = \"https://raw.githubusercontent.com/miaklwalker/thelegendofzelda/master/images/dungeons/zelda-dungeon2.png\"\r\n  }\r\n  goToOverworld(position:Vector,gameState:gameState){\r\n    let exit = [1,7,7.5,9];\r\n    const [x,y,px,py] = exit\r\n    if(this.position.x===x&&this.position.y===y&&position.x>=px&&position.y>=py){\r\n      gameState.Map = 0\r\n      this.theme.stop()\r\n      gameState.currentMap.theme.play()\r\n      position.x = 7\r\n      position.y = 5\r\n    }\r\n  }\r\n  }","import Dungeon from \"./dungeons\";\r\nimport { Vector } from \"../math/vector\";\r\nimport gameState from \"../systems/gameState\";\r\n\r\nexport default class thirdDungeon extends Dungeon{\r\n  constructor(){\r\n    super('thirdDungeon',[\"map\",\"compas\",\"raft\",\"heartContainer\",\"shardThree\"])\r\n    this.position = new Vector(3,5);\r\n    this.url = \"https://raw.githubusercontent.com/miaklwalker/thelegendofzelda/master/images/dungeons/zelda-dungeon3.png\"\r\n  }\r\n  goToOverworld(position:Vector,gameState:gameState){\r\n    let exit = [3,5,7.5,9];\r\n    const [x,y,px,py] = exit\r\n    if(this.position.x===x&&this.position.y===y&&position.x>=px&&position.y>=py){\r\n      gameState.Map = 0\r\n       this.theme.stop()\r\n    gameState.currentMap.theme.play()\r\n      position.x = 8\r\n      position.y = 5\r\n    }\r\n  }\r\n  }","import Dungeon from \"./dungeons\";\r\nimport { Vector } from \"../math/vector\";\r\nimport gameState from \"../systems/gameState\";\r\n\r\nexport default class fourthDungeon extends Dungeon{\r\n  constructor(){\r\n    super('fourthDungeon',[\"map\",\"compas\",\"stepLadder\",\"heartContainer\",\"shardFour\"])\r\n    this.position = new Vector(1,7);\r\n    this.url = \"https://raw.githubusercontent.com/miaklwalker/thelegendofzelda/master/images/dungeons/zelda-dungeon4.png\"\r\n  }\r\n  goToOverworld(position:Vector,gameState:gameState){\r\n    let exit = [1,7,7.5,9];\r\n    const [x,y,px,py] = exit\r\n    if(this.position.x===x&&this.position.y===y&&position.x>=px&&position.y>=py){\r\n      gameState.Map = 0\r\n       this.theme.stop()\r\n    gameState.currentMap.theme.play()\r\n      position.x = 8\r\n      position.y = 5\r\n    }\r\n  }\r\n  }","import Dungeon from \"./dungeons\";\r\nimport { Vector } from \"../math/vector\";\r\nimport gameState from \"../systems/gameState\";\r\n\r\nexport default class fifthDungeon extends Dungeon{\r\n  constructor(){\r\n    super('FifthDungeon',[\"map\",\"compas\",\"recorder\",\"heartContainer\",\"shardFive\"])\r\n    this.position = new Vector(2,7);\r\n    this.url = \"https://raw.githubusercontent.com/miaklwalker/thelegendofzelda/master/images/dungeons/zelda-dungeon5.png\"\r\n  }\r\n  goToOverworld(position:Vector,gameState:gameState){\r\n    let exit = [2,7,7.5,9];\r\n    const [x,y,px,py] = exit\r\n    if(this.position.x===x&&this.position.y===y&&position.x>=px&&position.y>=py){\r\n      gameState.Map = 0\r\n      this.theme.stop()\r\n      gameState.currentMap.theme.play()\r\n      position.x = 7\r\n      position.y = 5\r\n    }\r\n  }\r\n  }","import Dungeon from \"./dungeons\";\r\nimport { Vector } from \"../math/vector\";\r\nimport gameState from \"../systems/gameState\";\r\n\r\nexport default class sixthDungeon extends Dungeon{\r\n  constructor(){\r\n    super('sixthDungeon',[\"map\",\"compas\",\"magicRod\",\"heartContainer\",\"shardSix\"])\r\n    this.position = new Vector(1,7);\r\n    this.url = \"https://raw.githubusercontent.com/miaklwalker/thelegendofzelda/master/images/dungeons/zelda-dungeon6.png\"\r\n  }\r\n  goToOverworld(position:Vector,gameState:gameState){\r\n    let exit = [1,7,7.5,9];\r\n    const [x,y,px,py] = exit\r\n    if(this.position.x===x&&this.position.y===y&&position.x>=px&&position.y>=py){\r\n      gameState.Map = 0\r\n      this.theme.stop()\r\n      gameState.currentMap.theme.play()\r\n      position.x = 7\r\n      position.y = 5\r\n    }\r\n  }\r\n  }","import Dungeon from \"./dungeons\";\r\nimport { Vector } from \"../math/vector\";\r\nimport gameState from \"../systems/gameState\";\r\n\r\nexport default class seventhDungeon extends Dungeon{\r\n  constructor(){\r\n    super('seventhDungeon',[\"map\",\"compas\",\"redCandle\",\"heartContainer\",\"shardSeven\"])\r\n    this.position = new Vector(1,7);\r\n    this.url = \"https://raw.githubusercontent.com/miaklwalker/thelegendofzelda/master/images/dungeons/zelda-dungeon7.png\"\r\n  }\r\n  goToOverworld(position:Vector,gameState:gameState){\r\n    let exit = [1,7,7.5,9];\r\n    const [x,y,px,py] = exit\r\n    if(this.position.x===x&&this.position.y===y&&position.x>=px&&position.y>=py){\r\n      gameState.Map = 0\r\n      this.theme.stop()\r\n      gameState.currentMap.theme.play()\r\n      position.x = 7\r\n      position.y = 5\r\n    }\r\n  }\r\n  }","import Dungeon from \"./dungeons\";\r\nimport { Vector } from \"../math/vector\";\r\nimport gameState from \"../systems/gameState\";\r\n\r\nexport default class eighthDungeon extends Dungeon{\r\n  constructor(){\r\n    super('eighthDungeon',[\"map\",\"compas\",\"bookOfMagic\", \" magicalKey\" , \"heartContainer\",\"shardEight\"])\r\n    this.position = new Vector(3,7);\r\n    this.url = \"https://raw.githubusercontent.com/miaklwalker/thelegendofzelda/master/images/dungeons/zelda-dungeon8.png\"\r\n  }\r\n  goToOverworld(position:Vector,gameState:gameState){\r\n    let exit = [3,7,7.5,9];\r\n    const [x,y,px,py] = exit\r\n    if(this.position.x===x&&this.position.y===y&&position.x>=px&&position.y>=py){\r\n      gameState.Map = 0\r\n      this.theme.stop()\r\n      gameState.currentMap.theme.play()\r\n      position.x = 9\r\n      position.y = 2\r\n    }\r\n  }\r\n  }","import Dungeon from \"./dungeons\";\r\nimport { Vector } from \"../math/vector\";\r\nimport gameState from \"../systems/gameState\";\r\n\r\nexport default class ninthDungeon extends Dungeon{\r\n  constructor(){\r\n    super('ninthDungeon',[\"map\",\"compas\",\"silverArrows\", \"redRing\" , \"heartContainer\",\"shardNine\"])\r\n    this.position = new Vector(6,7);\r\n    this.url = \"https://raw.githubusercontent.com/miaklwalker/thelegendofzelda/master/images/dungeons/zelda-dungeon9.png\"\r\n  }\r\n  goToOverworld(position:Vector,gameState:gameState){\r\n    let exit = [6,7,7.5,9];\r\n    const [x,y,px,py] = exit\r\n    if(this.position.x===x&&this.position.y===y&&position.x>=px&&position.y>=py){\r\n      gameState.Map = 0\r\n      this.theme.stop()\r\n      gameState.currentMap.theme.play()\r\n      position.x = 5\r\n      position.y = 7\r\n    }\r\n  }\r\n  }","\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class inventory\r\n */\r\nexport default class inventory {\r\n    rupees: number;\r\n    items: any[];\r\n    subWeapon:string;\r\n    b: never[];\r\n    a: never[];\r\n    triforceParts: never[];\r\n    keys: number;\r\n    bombs: number;\r\n    bomb: boolean;\r\n    arrow: boolean;\r\n    /**\r\n     *Creates an instance of inventory.\r\n     * @memberof inventory\r\n     */\r\n    constructor(){\r\n        this.rupees = 0;\r\n        this.items = [];\r\n        this.subWeapon=''\r\n        this.b = [];\r\n        this.a = [];\r\n        this.triforceParts=[];\r\n        this.keys = 0 ;\r\n        this.bombs = 0 ;\r\n        this.bomb = false;\r\n        this.arrow = false;\r\n        \r\n    }\r\n}","import { Vector } from \"./classes/math/vector\";\r\nimport sound from \"./classes/systems/sound\";\r\n\r\nexport default class Overworld {\r\n    position: Vector;\r\n    url: string;\r\n    theme: sound;\r\n    constructor(){\r\n        this.position = new Vector(0,0);\r\n        this.theme = new sound('../music/Overworld.mp3')\r\n        this.url = \"https://raw.githubusercontent.com/miaklwalker/thelegendofzelda/master/images/overworld/zelda-overworld.png\"\r\n    }\r\n}","import firstDungeon from '../dungeons/dungeonOne';\r\nimport secondDungeon from '../dungeons/dungeonTwo';\r\nimport thirdDungeon from '../dungeons/dungeonThree';\r\nimport fourthDungeon from '../dungeons/dungeonFour';\r\nimport fifthDungeon from '../dungeons/dungeonFive';\r\nimport sixthDungeon from '../dungeons/dungeonSix';\r\nimport seventhDungeon from '../dungeons/dungeonSeven';\r\nimport eighthDungeon from '../dungeons/dungeonEight';\r\nimport ninthDungeon from '../dungeons/dungeonNine';\r\nimport inventory from './inventory';\r\nimport Overworld from '../../overworld';\r\nimport { Vector } from '../math/vector';\r\nimport Message from './message';\r\nimport Game from './game';\r\nlet index = 0;\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class gameState\r\n */\r\nexport default class gameState {\r\n\tmaps: any[];\r\n\tinventory: inventory;\r\n\tpaused: boolean;\r\n\ttransition: boolean;\r\n\tcurrentMap: Overworld;\r\n\t/**\r\n\t *Creates an instance of gameState.\r\n\t * @memberof gameState\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.maps = [\r\n\t\t\tnew Overworld(),\r\n\t\t\tnew firstDungeon(),\r\n\t\t\tnew secondDungeon(),\r\n\t\t\tnew thirdDungeon(),\r\n\t\t\tnew fourthDungeon(),\r\n\t\t\tnew fifthDungeon(),\r\n\t\t\tnew sixthDungeon(),\r\n\t\t\tnew seventhDungeon(),\r\n\t\t\tnew eighthDungeon(),\r\n\t\t\tnew ninthDungeon(),\r\n\t\t];\r\n\t\tthis.inventory = new inventory();\r\n\t\tthis.paused = false;\r\n\t\tthis.transition = false;\r\n\t\tthis.currentMap = this.maps[0];\r\n\t}\r\n\r\n\tset Map(num: number) {\r\n\t\t  if (num < 0 || num > 9) {\r\n\t\t\t  throw new Error('Dungeon not found');\r\n\t\t  } else {\r\n\t\t\t  this.currentMap = this.maps[num];\r\n\t\t}\r\n\t}\r\n\r\n\tchangeScreen(position: Vector,game:Game) {\r\n\tlet map = this.currentMap.position;\r\n\r\n    let changed:boolean = false\r\n\t\tif (position.x > 15) {\r\n\t\t\tposition.x = 1;\r\n\t\t\tmap.x += 1;\r\n\t\t\tchanged = true\r\n\t\t}\r\n\t\tif (position.x < 0.7) {\r\n\t\t\tposition.x = 14;\r\n\t\t\tmap.x -= 1;\r\n\t\t\tchanged = true\r\n\t\t}\r\n\t\tif (position.y > 9.7) {\r\n\t\t\tposition.y = 1;\r\n\t\t\tmap.y += 1;\r\n\t\t\tchanged = true\r\n\t\t}\r\n\t\tif (position.y < 0.7) {\r\n\t\t\tposition.y = 9;\r\n\t\t\tmap.y -= 1;\r\n\t\t\tchanged = true\r\n\t\t}\r\n\t\tif(changed){\r\n\t\t\tlet index:string = `${ map.x},${map.y}`\r\n\t\t\tconsole.log(index)\r\n\t\t\tgame.system.makeScreen(game.json.tileMap[index])\r\n\t\t\tchanged = false\r\n\t\t}\r\n\t}\r\n\tchangeMap(position: Vector) {\r\n\t\tif (this.currentMap !== this.maps[0]) {\r\n\t\t\t//@ts-ignore\r\n\t\t\tthis.currentMap.goToOverworld(position, this);\r\n\t\t} else {\r\n\t\t\tlet dunLoc = [\r\n\t\t\t\t[7, 3, 7, 4],\r\n\t\t\t\t[12, 3, 7, 4],\r\n\t\t\t\t[4, 7, 8, 4],\r\n\t\t\t\t[5, 4, 8, 4],\r\n\t\t\t\t[11, 0, 7, 4],\r\n\t\t\t\t[2, 4, 7, 4],\r\n\t\t\t\t[2, 2, 7, 4],\r\n\t\t\t\t[13, 6, 10, 2],\r\n\t\t\t\t[5, 0, 5, 6],\r\n\t\t\t];\r\n\t\t\tdunLoc.forEach(([oX, oY, lX, lY], index) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\toX === this.currentMap.position.x &&\r\n\t\t\t\t\toY === this.currentMap.position.y &&\r\n\t\t\t\t\tlX === Math.round(position.x) &&\r\n\t\t\t\t\tlY === Math.round(position.y)\r\n\t\t\t\t) {\r\n\t\t\t\t\tthis.currentMap.theme.stop();\r\n\t\t\t\t\tthis.currentMap = this.maps[index + 1];\r\n\t\t\t\t\tthis.currentMap.theme.play();\r\n\t\t\t\t\tposition.x = 7.6;\r\n\t\t\t\t\tposition.y = 7.7;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tonMessage(msg: Message) {\r\n\t\tif (msg.from === 'controls') {\r\n\t\t\t//@ts-ignore\r\n\t\t\tthis[msg.type] = !this[msg.type];\r\n\t\t}\r\n\t}\r\n}\r\n","import { Vector } from \"../math/vector\";\r\nimport Message from \"../systems/message\";\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class Link\r\n * @description Will encapsulate Link , including health , position \r\n */\r\nexport default class Link {\r\n    hearts: number;\r\n    health: number;\r\n    position: Vector;\r\n    frameAdjusted: number;\r\n    action: string;\r\n    shield: string;\r\n    direction: string;\r\n    constructor(){\r\n        this.frameAdjusted = 0 \r\n        this.hearts = 3;\r\n        this.health = 3;\r\n        this.position = new Vector(7,5)\r\n        this.action = 'walk'\r\n        this.shield = 'small'\r\n        this.direction = 'right'\r\n    }\r\n    show(){\r\n        let str = `link-${this.action}-${this.direction}-${this.frameAdjusted%2+1}-${this.shield}`\r\n        return str\r\n    }\r\n    onMessage(msg:Message){\r\n        //@ts-ignore\r\n       this[msg.type] = msg.data;\r\n       if(msg.data===\"right\"){this.position.x+=.2}\r\n       if(msg.data===\"down\"){this.position.y+=.2}\r\n       if(msg.data===\"left\"){this.position.x-=.2}\r\n       if(msg.data===\"up\"){this.position.y-=.2}\r\n       this.frameAdjusted++\r\n       \r\n    }\r\n}","/**\r\n *\r\n *\r\n * @export\r\n * @param {string} url\r\n * @returns\r\n */\r\nexport default function loadImage(url:string) {\r\n    return new Promise(resolve => {\r\n        const image: HTMLImageElement = new Image();\r\n        image.addEventListener(\"load\", () => {\r\n            resolve(image);\r\n        });\r\n        image.src = url;\r\n    }) as Promise<HTMLImageElement>;\r\n}\r\n","\r\nimport Game from \"./game\";\r\nimport { Vector } from \"../math/vector\";\r\nimport loadImage from \"../../functions/getImage\";\r\n\r\nexport default class camera {\r\n  position: Vector;\r\n  constructor() {\r\n    this.position = new Vector();\r\n  }\r\n\r\n  show(game: Game, context: CanvasRenderingContext2D) {\r\n    let paused = game.gameState.paused ? 480 : 120;\r\n    let { x, y } = this.position;\r\n    let { url,position } = game.gameState.currentMap;\r\n    loadImage(url).then(data => {\r\n      this.position = position;\r\n      context.drawImage(data, x * 256, y * 176.1, 256, 405, 0, paused, 512, 863);\r\n    });\r\n  }\r\n}\r\n","import Game from \"./game\";\r\nimport { Vector } from \"../math/vector\";\r\nimport camera from \"./camera\";\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class Hud\r\n */\r\nexport default class Hud {\r\n  rupees: any;\r\n  bombs: any;\r\n  keys: any;\r\n  hearts: any;\r\n  position: Vector;\r\n  frame: number;\r\n  blink: boolean;\r\n  camera: camera;\r\n  /**\r\n   *Creates an instance of Hud.\r\n   * @param {Game} game\r\n   * @memberof Hud\r\n   */\r\n  constructor(game: Game) {\r\n    this.rupees = game.gameState.inventory.rupees;\r\n    this.keys = game.gameState.inventory.keys;\r\n    this.bombs = game.gameState.inventory.bombs;\r\n    this.hearts = game.Link.hearts;\r\n    this.position = new Vector();\r\n    this.frame = 0;\r\n    this.blink = false;\r\n    this.camera = game.camera;\r\n  }\r\n  minimap(context: CanvasRenderingContext2D) {\r\n    this.position = this.camera.position;\r\n    this.frame++;\r\n    if (this.frame % 30 === 0) {\r\n      this.blink = !this.blink;\r\n    }\r\n    let minimapX = 130;\r\n    let minimapY = 77;\r\n    let width = 16;\r\n    let height = 8;\r\n    let offsetX = 31;\r\n    let offsetY = 385;\r\n    let color = this.blink ? 0 : 1;\r\n    let colors = [\"lightGrey\", \"Grey\"];\r\n    let x = (minimapX / width) * this.position.x + offsetX;\r\n    let y = (minimapY / height) * this.position.y + offsetY;\r\n\r\n    context.fillStyle = colors[1];\r\n    context.fillRect(offsetX, offsetY, minimapX, minimapY);\r\n\r\n    context.fillStyle = \"black\";\r\n    context.fillRect(31, 366, 130, 19);\r\n\r\n    context.fillStyle = colors[color];\r\n    context.fillRect(x, y, 9, 9);\r\n    this.showHearts(context);\r\n  }\r\n  /**\r\n   *\r\n   *\r\n   * @param {CanvasRenderingContext2D} context\r\n   * @param {Game} game\r\n   * @memberof Hud\r\n   */\r\n  show(context: CanvasRenderingContext2D, game: Game) {}\r\n  showHearts(context: CanvasRenderingContext2D) {\r\n    let index = 0;\r\n    let heartNum = this.hearts;\r\n    for (let i = 0; i < 2; i++) {\r\n      for (let j = 0; j < 8; j++) {\r\n        index++;\r\n        heartNum >= index\r\n          ? (context.fillStyle = 'red')\r\n          : (context.fillStyle = \"black\");\r\n        context.fillRect(352 + j * 16.125, 442.9 - 19.5 * i, 16.125, 19.5);\r\n      }\r\n    }\r\n  }\r\n}\r\n","//@ts-ignore\r\nconst EMPTY = {};\r\nconst HOP = Object.prototype.hasOwnProperty;\r\n\r\nlet fns = {\r\n      /**  let cachedFn = memoize(originalFn); */\r\n      //@ts-ignore\r\n\tmemoize(fn, opt=EMPTY) {\r\n            //@ts-ignore\r\n            let cache = opt.cache || {};\r\n            //@ts-ignore\r\n\t\treturn function(...a) {\r\n                  //@ts-ignore\r\n                  let k = String(a[0]);\r\n                  //@ts-ignore\r\n                  if (opt.caseSensitive===false) k = k.toLowerCase();\r\n                  //@ts-ignore\r\n\t\t\treturn HOP.call(cache,k) ? cache[k] : (cache[k] = fn.apply(this, a));\r\n\t\t};\r\n\t},\r\n\r\n      /** let throttled = debounce(10, console.log); */\r\n      //@ts-ignore\r\n\tdebounce(fn, opts) {\r\n\t\tif (typeof opts==='function') { let p = fn; fn = opts; opts = p; }\r\n            let delay = opts && opts.delay || opts || 0,\r\n            //@ts-ignore\r\n                  args, context, timer;\r\n                  //@ts-ignore\r\n\t\treturn function(...a) {\r\n                  args = a;\r\n                  //@ts-ignore\r\n                  context = this;\r\n                  //@ts-ignore\r\n\t\t\tif (!timer) timer = setTimeout( () => {\r\n                        //@ts-ignore\r\n\t\t\t\tfn.apply(context, args);\r\n\t\t\t\targs = context = timer = null;\r\n\t\t\t}, delay);\r\n\t\t};\r\n\t},\r\n//@ts-ignore\r\n\tbind(target, key, { value: fn }) {\r\n\t\t// In IE11 calling Object.defineProperty has a side-effect of evaluating the\r\n\t\t// getter for the property which is being replaced. This causes infinite\r\n\t\t// recursion and an \"Out of stack space\" error.\r\n\t\tlet definingProperty = false;\r\n\t\treturn {\r\n\t\t\tconfigurable: true,\r\n\t\t\tget() {\r\n\t\t\t\tif (definingProperty) {\r\n\t\t\t\t\treturn fn;\r\n\t\t\t\t}\r\n\t\t\t\tlet value = fn.bind(this);\r\n\t\t\t\tdefiningProperty = true;\r\n\t\t\t\tObject.defineProperty(this, key, {\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\twritable: true\r\n\t\t\t\t});\r\n\t\t\t\tdefiningProperty = false;\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n};\r\n\r\n//@ts-ignore\r\nlet memoize = multiMethod(fns.memoize),\r\n//@ts-ignore\r\n      debounce = multiMethod(fns.debounce),\r\n      //@ts-ignore\r\n\tbind = multiMethod((f,c)=>f.bind(c), ()=>fns.bind);\r\n\r\nexport { memoize, debounce, bind };\r\nexport default { memoize, debounce, bind };\r\n\r\n\r\n/** Creates a function that supports the following calling styles:\r\n *\td() - returns an unconfigured decorator\r\n *\td(opts) - returns a configured decorator\r\n *\td(fn, opts) - returns a decorated proxy to `fn`\r\n *\td(target, key, desc) - the decorator itself\r\n *\r\n *\t@Example:\r\n *\t\t// simple identity deco:\r\n *\t\tlet d = multiMethod( fn => fn );\r\n *\r\n *\t\tclass Foo {\r\n *\t\t\t@d\r\n *\t\t\tbar() { }\r\n *\r\n *\t\t\t@d()\r\n *\t\t\tbaz() { }\r\n *\r\n *\t\t\t@d({ opts })\r\n *\t\t\tbat() { }\r\n *\r\n *\t\t\tbap = d(() => {})\r\n *\t\t}\r\n */\r\n//@ts-ignore\r\nfunction multiMethod(inner, deco) {\r\n\tdeco = deco || inner.decorate || decorator(inner);\r\n      let d = deco();\r\n      //@ts-ignore\r\n\treturn (...args) => {\r\n\t\tlet l = args.length;\r\n\t\treturn (l<2 ? deco : (l>2 ? d : inner))(...args);\r\n\t};\r\n}\r\n\r\n/** Returns function supports the forms:\r\n *\tdeco(target, key, desc) -> decorate a method\r\n *\tdeco(Fn) -> call the decorator proxy on a function\r\n */\r\n//@ts-ignore\r\nfunction decorator(fn) {\r\n      //@ts-ignore\r\n\treturn opt => (\r\n            //@ts-ignore\r\n\t\ttypeof opt==='function' ? fn(opt) : (target, key, desc) => {\r\n\t\t\tdesc.value = fn(desc.value, opt, target, key, desc);\r\n\t\t}\r\n\t);\r\n}","import Game from \"./game\";\r\nimport Hud from \"./hud\";\r\nimport { memoize } from \"../../objects/decorators\";\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class pauseScreen\r\n */\r\nexport default class pauseScreen {\r\n    frame: number;\r\n    blink: boolean;\r\n    hud: Hud;\r\n    /**\r\n     *Creates an instance of pauseScreen.\r\n     * @memberof pauseScreen\r\n     */\r\n    constructor(game:Game) {\r\n        this.frame = 0;\r\n        this.blink = true;\r\n        this.hud = new Hud(game)\r\n    }\r\n    /**\r\n     * @param {Game} game\r\n     * @returns\r\n     * @memberof pauseScreen\r\n     */\r\n    @memoize\r\n    show(game: Game) {\r\n        let screen = () => {\r\n            let canvas: HTMLCanvasElement = document.createElement(\"canvas\");\r\n            canvas.width = game.width;\r\n            canvas.height = game.height;\r\n            let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n            let imageOne = game.images[11].sheet;\r\n            const HUD: HTMLImageElement = imageOne;\r\n            context.drawImage(HUD, ...game.json.hud.inventory); //*inventory\r\n            context.drawImage(HUD, ...game.json.hud.triforce); //*triforce\r\n            context.drawImage(HUD, ...game.json.hud.top); //*hud\r\n            this.hud.minimap(context);\r\n            return canvas;\r\n        };\r\n        return screen;\r\n    }\r\n}\r\n","import RootObject from \"../../objects/interfaces\";\r\n\r\n\r\n\r\n\r\n\r\ninterface SpriteSheetCor {\r\n[key:string]:any\r\n    name: string;\r\n    x: number;\r\n    y: number;\r\n    w: number;\r\n    h: number;\r\n}\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class SpriteSheet\r\n */\r\nexport default class SpriteSheet{\r\n    sheet: HTMLImageElement;\r\n    name: string;\r\n    sprites: Object;\r\n    constructor(image:HTMLImageElement,name:string){\r\n        this.sheet = image;\r\n        this.name = name;\r\n        this.sprites = {};\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * @param {RootObject} json\r\n     * @memberof SpriteSheet\r\n     * @description takes a string \" 'name''direction'-'number(as word)'-'action'-'shieldSize'  \"\r\n     * and uses it as the key for an array of values\r\n     */\r\n    makeSprites(json:RootObject){\r\n        //@ts-ignore\r\n        json.Sprites[this.name].forEach((Sprite:SpriteSheetCor)=>{\r\n            if(this.name === \"link\"){\r\n                //@ts-ignore\r\n            this.sprites[Sprite.name]=[Sprite.x,Sprite.y,Sprite.w,Sprite.h]\r\n            }\r\n        })\r\n    }\r\n\r\n    renderSprite(context:CanvasRenderingContext2D,action:string,location:[number,number,number,number]){\r\n        //@ts-ignores\r\n        context.drawImage(this.sheet,...this.sprites[action],...location)\r\n    }\r\n}","\r\n\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class Message\r\n */\r\nexport default class Message {\r\n    to:string\r\n    from:string\r\n    type:string\r\n    data:any\r\n\t/**\r\n\t *Creates an instance of Message.\r\n\t * @param {string} to\r\n\t * @param {string} from\r\n\t * @param {string} type\r\n\t * @param {*} data\r\n\t * @memberof Message\r\n\t */\r\n\tconstructor(to:string, from:string, type:string, data:any) {\r\n\t\tthis.to = to;\r\n\t\tthis.from = from;\r\n\t\tthis.type = type;\r\n\t\tthis.data = data;\r\n\t}\r\n}","import controlsConfig from \"./controlsConfig\";\r\nimport MessageQueue from \"./messageQueue\";\r\nimport Message from \"./message\";\r\n\r\nexport default class Controls {\r\n    up: string;\r\n    down: string;\r\n    left: string;\r\n    right: string;\r\n    start: string;\r\n    select: string;\r\n    A: string;\r\n    B: string;\r\n    lastKey: string;\r\n    keyUp: string;\r\n    timeOut: number;\r\n    constructor(config: controlsConfig) {\r\n        this.up = config.up;\r\n        this.down = config.down;\r\n        this.left = config.left;\r\n        this.right = config.right;\r\n        this.start = config.start;\r\n        this.select = config.select;\r\n        this.A = config.A;\r\n        this.B = config.B;\r\n        this.lastKey = \"\";\r\n        this.keyUp = \"\";\r\n        this.timeOut = 0;\r\n    }\r\n    setupControls(msgCenter: MessageQueue) {\r\n        const values = Object.values(this);\r\n        const keys = Object.keys(this);\r\n        document.addEventListener(\"keydown\", event => {\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (event.code === values[i] && this.lastKey !== keys[i]) {\r\n                    if (\r\n                        [\"up\", \"down\", \"left\", \"right\", \"A\", \"B\"].includes(\r\n                            keys[i],\r\n                        )\r\n                    ) {\r\n                        event.preventDefault();\r\n                        this.lastKey = keys[i];\r\n                        let msg: Message = new Message(\r\n                            \"Link\",\r\n                            \"controls\",\r\n                            \"direction\",\r\n                            keys[i],\r\n                        );\r\n                        msgCenter.add(msg);\r\n                    } else {\r\n                        this.lastKey = keys[i];\r\n                        let msg: Message = new Message(\r\n                            \"gameState\",\r\n                            \"controls\",\r\n                            \"paused\",\r\n                            keys[i],\r\n                        );\r\n                        msgCenter.add(msg);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        document.addEventListener(\"keyup\", event => {\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (event.code === values[i] && this.keyUp !== keys[i]) {\r\n                    this.keyUp = keys[i];\r\n                }\r\n            }\r\n        });\r\n        setTimeout(() => {\r\n            this.lastKey = \"\";\r\n        }, 150);\r\n    }\r\n}\r\n","import Message from \"./message\";\r\nimport Game from \"./game\";\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class MessageQueue\r\n */\r\nexport default class MessageQueue {\r\n    messages: any[];\r\n    entities: any[];\r\n    game:Game\r\n\r\n    /**\r\n     *Creates an instance of MessageQueue.\r\n     * @memberof MessageQueue\r\n     */\r\n    constructor(game:Game) {\r\n        this.messages = [];\r\n        this.entities = [];\r\n        this.game = game;\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {Message} msg\r\n     * @memberof MessageQueue\r\n     */\r\n    add(msg: Message) {\r\n        this.messages.push(msg);\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @memberof MessageQueue\r\n     */\r\n    addEntities() {}\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @memberof MessageQueue\r\n     */\r\n    dispatch() {\r\n        for (let i = 0; i < this.messages.length; i++) {\r\n            let msg = this.messages[i];\r\n                        //@ts-ignore\r\n            this.game[msg.to].onMessage(msg)\r\n            this.messages.splice(i,1);\r\n        }\r\n\r\n    }\r\n    purge() {\r\n        this.entities = [];\r\n    }\r\n}\r\n","export default class controlsConfig {\r\n\t[index:string]:string\r\n\tup: string;\r\n\tdown: string;\r\n\tleft: string;\r\n\tright: string;\r\n\tstart: string;\r\n\tselect: string;\r\n\tA: string;\r\n\tB: string;\r\n\tconstructor(\r\n\t\tup: string,\r\n\t\tdown: string,\r\n\t\tleft: string,\r\n\t\tright: string,\r\n\t\tstart: string,\r\n\t\tselect: string,\r\n\t\tA: string,\r\n\t\tB: string,\r\n\t) {\r\n\t\tthis.up = up;\r\n\t\tthis.down = down;\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.start = start;\r\n\t\tthis.select = select;\r\n\t\tthis.A = A;\r\n\t\tthis.B = B;\r\n\t}\r\n}\r\n","import controlsConfig from \"../classes/systems/controlsConfig\";\r\n\r\nlet config = new controlsConfig(\r\n\t'ArrowUp',\r\n\t'ArrowDown',\r\n\t'ArrowLeft',\r\n\t'ArrowRight',\r\n\t'Enter',\r\n\t'Space',\r\n\t'KeyA',\r\n\t'KeyB',\r\n);\r\nexport default config","/**\r\n * @private\r\n */\r\nconst branch_pool = [];\r\n\r\n/**\r\n * A branch within a BVH\r\n * @class\r\n * @private\r\n */\r\nexport default class BVHBranch {\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tconstructor() {\r\n\t\t/** @private */\r\n\t\tthis._bvh_parent = null;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_branch = true;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_left = null;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_right = null;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_sort = 0;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_min_x = 0;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_min_y = 0;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_max_x = 0;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_max_y = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a branch from the branch pool or creates a new branch\r\n\t * @returns {BVHBranch}\r\n\t */\r\n\tstatic getBranch() {\r\n\t\tif(branch_pool.length) {\r\n\t\t\treturn branch_pool.pop();\r\n\t\t}\r\n\r\n\t\treturn new BVHBranch();\r\n\t}\r\n\r\n\t/**\r\n\t * Releases a branch back into the branch pool\r\n\t * @param {BVHBranch} branch The branch to release\r\n\t */\r\n\tstatic releaseBranch(branch) {\r\n\t\tbranch_pool.push(branch);\r\n\t}\r\n\r\n\t/**\r\n\t * Sorting callback used to sort branches by deepest first\r\n\t * @param {BVHBranch} a The first branch\r\n\t * @param {BVHBranch} b The second branch\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic sortBranches(a, b) {\r\n\t\treturn a.sort > b.sort ? -1 : 1;\r\n\t}\r\n};\r\n","import BVHBranch from './BVHBranch.js';\r\n\r\n/**\r\n * A Bounding Volume Hierarchy (BVH) used to find potential collisions quickly\r\n * @class\r\n * @private\r\n */\r\nexport default class BVH {\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tconstructor() {\r\n\t\t/** @private */\r\n\t\tthis._hierarchy = null;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bodies = [];\r\n\r\n\t\t/** @private */\r\n\t\tthis._dirty_branches = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts a body into the BVH\r\n\t * @param {Circle|Polygon|Point} body The body to insert\r\n\t * @param {Boolean} [updating = false] Set to true if the body already exists in the BVH (used internally when updating the body's position)\r\n\t */\r\n\tinsert(body, updating = false) {\r\n\t\tif(!updating) {\r\n\t\t\tconst bvh = body._bvh;\r\n\r\n\t\t\tif(bvh && bvh !== this) {\r\n\t\t\t\tthrow new Error('Body belongs to another collision system');\r\n\t\t\t}\r\n\r\n\t\t\tbody._bvh = this;\r\n\t\t\tthis._bodies.push(body);\r\n\t\t}\r\n\r\n\t\tconst polygon = body._polygon;\r\n\t\tconst body_x  = body.x;\r\n\t\tconst body_y  = body.y;\r\n\r\n\t\tif(polygon) {\r\n\t\t\tif(\r\n\t\t\t\tbody._dirty_coords ||\r\n\t\t\t\tbody.x       !== body._x ||\r\n\t\t\t\tbody.y       !== body._y ||\r\n\t\t\t\tbody.angle   !== body._angle ||\r\n\t\t\t\tbody.scale_x !== body._scale_x ||\r\n\t\t\t\tbody.scale_y !== body._scale_y\r\n\t\t\t) {\r\n\t\t\t\tbody._calculateCoords();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst padding    = body._bvh_padding;\r\n\t\tconst radius     = polygon ? 0 : body.radius * body.scale;\r\n\t\tconst body_min_x = (polygon ? body._min_x : body_x - radius) - padding;\r\n\t\tconst body_min_y = (polygon ? body._min_y : body_y - radius) - padding;\r\n\t\tconst body_max_x = (polygon ? body._max_x : body_x + radius) + padding;\r\n\t\tconst body_max_y = (polygon ? body._max_y : body_y + radius) + padding;\r\n\r\n\t\tbody._bvh_min_x = body_min_x;\r\n\t\tbody._bvh_min_y = body_min_y;\r\n\t\tbody._bvh_max_x = body_max_x;\r\n\t\tbody._bvh_max_y = body_max_y;\r\n\r\n\t\tlet current = this._hierarchy;\r\n\t\tlet sort    = 0;\r\n\r\n\t\tif(!current) {\r\n\t\t\tthis._hierarchy = body;\r\n\t\t}\r\n\t\telse {\r\n\t\t\twhile(true) {\r\n\t\t\t\t// Branch\r\n\t\t\t\tif(current._bvh_branch) {\r\n\t\t\t\t\tconst left            = current._bvh_left;\r\n\t\t\t\t\tconst left_min_y      = left._bvh_min_y;\r\n\t\t\t\t\tconst left_max_x      = left._bvh_max_x;\r\n\t\t\t\t\tconst left_max_y      = left._bvh_max_y;\r\n\t\t\t\t\tconst left_new_min_x  = body_min_x < left._bvh_min_x ? body_min_x : left._bvh_min_x;\r\n\t\t\t\t\tconst left_new_min_y  = body_min_y < left_min_y ? body_min_y : left_min_y;\r\n\t\t\t\t\tconst left_new_max_x  = body_max_x > left_max_x ? body_max_x : left_max_x;\r\n\t\t\t\t\tconst left_new_max_y  = body_max_y > left_max_y ? body_max_y : left_max_y;\r\n\t\t\t\t\tconst left_volume     = (left_max_x - left._bvh_min_x) * (left_max_y - left_min_y);\r\n\t\t\t\t\tconst left_new_volume = (left_new_max_x - left_new_min_x) * (left_new_max_y - left_new_min_y);\r\n\t\t\t\t\tconst left_difference = left_new_volume - left_volume;\r\n\r\n\t\t\t\t\tconst right            = current._bvh_right;\r\n\t\t\t\t\tconst right_min_x      = right._bvh_min_x;\r\n\t\t\t\t\tconst right_min_y      = right._bvh_min_y;\r\n\t\t\t\t\tconst right_max_x      = right._bvh_max_x;\r\n\t\t\t\t\tconst right_max_y      = right._bvh_max_y;\r\n\t\t\t\t\tconst right_new_min_x  = body_min_x < right_min_x ? body_min_x : right_min_x;\r\n\t\t\t\t\tconst right_new_min_y  = body_min_y < right_min_y ? body_min_y : right_min_y;\r\n\t\t\t\t\tconst right_new_max_x  = body_max_x > right_max_x ? body_max_x : right_max_x;\r\n\t\t\t\t\tconst right_new_max_y  = body_max_y > right_max_y ? body_max_y : right_max_y;\r\n\t\t\t\t\tconst right_volume     = (right_max_x - right_min_x) * (right_max_y - right_min_y);\r\n\t\t\t\t\tconst right_new_volume = (right_new_max_x - right_new_min_x) * (right_new_max_y - right_new_min_y);\r\n\t\t\t\t\tconst right_difference = right_new_volume - right_volume;\r\n\r\n\t\t\t\t\tcurrent._bvh_sort  = sort++;\r\n\t\t\t\t\tcurrent._bvh_min_x = left_new_min_x < right_new_min_x ? left_new_min_x : right_new_min_x;\r\n\t\t\t\t\tcurrent._bvh_min_y = left_new_min_y < right_new_min_y ? left_new_min_y : right_new_min_y;\r\n\t\t\t\t\tcurrent._bvh_max_x = left_new_max_x > right_new_max_x ? left_new_max_x : right_new_max_x;\r\n\t\t\t\t\tcurrent._bvh_max_y = left_new_max_y > right_new_max_y ? left_new_max_y : right_new_max_y;\r\n\r\n\t\t\t\t\tcurrent = left_difference <= right_difference ? left : right;\r\n\t\t\t\t}\r\n\t\t\t\t// Leaf\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst grandparent  = current._bvh_parent;\r\n\t\t\t\t\tconst parent_min_x = current._bvh_min_x;\r\n\t\t\t\t\tconst parent_min_y = current._bvh_min_y;\r\n\t\t\t\t\tconst parent_max_x = current._bvh_max_x;\r\n\t\t\t\t\tconst parent_max_y = current._bvh_max_y;\r\n\t\t\t\t\tconst new_parent   = current._bvh_parent = body._bvh_parent = BVHBranch.getBranch();\r\n\r\n\t\t\t\t\tnew_parent._bvh_parent = grandparent;\r\n\t\t\t\t\tnew_parent._bvh_left   = current;\r\n\t\t\t\t\tnew_parent._bvh_right  = body;\r\n\t\t\t\t\tnew_parent._bvh_sort   = sort++;\r\n\t\t\t\t\tnew_parent._bvh_min_x  = body_min_x < parent_min_x ? body_min_x : parent_min_x;\r\n\t\t\t\t\tnew_parent._bvh_min_y  = body_min_y < parent_min_y ? body_min_y : parent_min_y;\r\n\t\t\t\t\tnew_parent._bvh_max_x  = body_max_x > parent_max_x ? body_max_x : parent_max_x;\r\n\t\t\t\t\tnew_parent._bvh_max_y  = body_max_y > parent_max_y ? body_max_y : parent_max_y;\r\n\r\n\t\t\t\t\tif(!grandparent) {\r\n\t\t\t\t\t\tthis._hierarchy = new_parent;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(grandparent._bvh_left === current) {\r\n\t\t\t\t\t\tgrandparent._bvh_left = new_parent;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tgrandparent._bvh_right = new_parent;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a body from the BVH\r\n\t * @param {Circle|Polygon|Point} body The body to remove\r\n\t * @param {Boolean} [updating = false] Set to true if this is a temporary removal (used internally when updating the body's position)\r\n\t */\r\n\tremove(body, updating = false) {\r\n\t\tif(!updating) {\r\n\t\t\tconst bvh = body._bvh;\r\n\r\n\t\t\tif(bvh && bvh !== this) {\r\n\t\t\t\tthrow new Error('Body belongs to another collision system');\r\n\t\t\t}\r\n\r\n\t\t\tbody._bvh = null;\r\n\t\t\tthis._bodies.splice(this._bodies.indexOf(body), 1);\r\n\t\t}\r\n\r\n\t\tif(this._hierarchy === body) {\r\n\t\t\tthis._hierarchy = null;\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst parent       = body._bvh_parent;\r\n\t\tconst grandparent  = parent._bvh_parent;\r\n\t\tconst parent_left  = parent._bvh_left;\r\n\t\tconst sibling      = parent_left === body ? parent._bvh_right : parent_left;\r\n\r\n\t\tsibling._bvh_parent = grandparent;\r\n\r\n\t\tif(sibling._bvh_branch) {\r\n\t\t\tsibling._bvh_sort = parent._bvh_sort;\r\n\t\t}\r\n\r\n\t\tif(grandparent) {\r\n\t\t\tif(grandparent._bvh_left === parent) {\r\n\t\t\t\tgrandparent._bvh_left = sibling;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgrandparent._bvh_right = sibling;\r\n\t\t\t}\r\n\r\n\t\t\tlet branch = grandparent;\r\n\r\n\t\t\twhile(branch) {\r\n\t\t\t\tconst left       = branch._bvh_left;\r\n\t\t\t\tconst left_min_x = left._bvh_min_x;\r\n\t\t\t\tconst left_min_y = left._bvh_min_y;\r\n\t\t\t\tconst left_max_x = left._bvh_max_x;\r\n\t\t\t\tconst left_max_y = left._bvh_max_y;\r\n\r\n\t\t\t\tconst right       = branch._bvh_right;\r\n\t\t\t\tconst right_min_x = right._bvh_min_x;\r\n\t\t\t\tconst right_min_y = right._bvh_min_y;\r\n\t\t\t\tconst right_max_x = right._bvh_max_x;\r\n\t\t\t\tconst right_max_y = right._bvh_max_y;\r\n\r\n\t\t\t\tbranch._bvh_min_x = left_min_x < right_min_x ? left_min_x : right_min_x;\r\n\t\t\t\tbranch._bvh_min_y = left_min_y < right_min_y ? left_min_y : right_min_y;\r\n\t\t\t\tbranch._bvh_max_x = left_max_x > right_max_x ? left_max_x : right_max_x;\r\n\t\t\t\tbranch._bvh_max_y = left_max_y > right_max_y ? left_max_y : right_max_y;\r\n\r\n\t\t\t\tbranch = branch._bvh_parent;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._hierarchy = sibling;\r\n\t\t}\r\n\r\n\t\tBVHBranch.releaseBranch(parent);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the BVH. Moved bodies are removed/inserted.\r\n\t */\r\n\tupdate() {\r\n\t\tconst bodies = this._bodies;\r\n\t\tconst count  = bodies.length;\r\n\r\n\t\tfor(let i = 0; i < count; ++i) {\r\n\t\t\tconst body = bodies[i];\r\n\r\n\t\t\tlet update = false;\r\n\r\n\t\t\tif(!update && body.padding !== body._bvh_padding) {\r\n\t\t\t\tbody._bvh_padding = body.padding;\r\n\t\t\t\tupdate = true;\r\n\t\t\t}\r\n\r\n\t\t\tif(!update) {\r\n\t\t\t\tconst polygon = body._polygon;\r\n\r\n\t\t\t\tif(polygon) {\r\n\t\t\t\t\tif(\r\n\t\t\t\t\t\tbody._dirty_coords ||\r\n\t\t\t\t\t\tbody.x       !== body._x ||\r\n\t\t\t\t\t\tbody.y       !== body._y ||\r\n\t\t\t\t\t\tbody.angle   !== body._angle ||\r\n\t\t\t\t\t\tbody.scale_x !== body._scale_x ||\r\n\t\t\t\t\t\tbody.scale_y !== body._scale_y\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tbody._calculateCoords();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst x      = body.x;\r\n\t\t\t\tconst y      = body.y;\r\n\t\t\t\tconst radius = polygon ? 0 : body.radius * body.scale;\r\n\t\t\t\tconst min_x  = polygon ? body._min_x : x - radius;\r\n\t\t\t\tconst min_y  = polygon ? body._min_y : y - radius;\r\n\t\t\t\tconst max_x  = polygon ? body._max_x : x + radius;\r\n\t\t\t\tconst max_y  = polygon ? body._max_y : y + radius;\r\n\r\n\t\t\t\tupdate = min_x < body._bvh_min_x || min_y < body._bvh_min_y || max_x > body._bvh_max_x || max_y > body._bvh_max_y;\r\n\t\t\t}\r\n\r\n\t\t\tif(update) {\r\n\t\t\t\tthis.remove(body, true);\r\n\t\t\t\tthis.insert(body, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of potential collisions for a body\r\n\t * @param {Circle|Polygon|Point} body The body to test\r\n\t * @returns {Array<Body>}\r\n\t */\r\n\tpotentials(body) {\r\n\t\tconst results = [];\r\n\t\tconst min_x   = body._bvh_min_x;\r\n\t\tconst min_y   = body._bvh_min_y;\r\n\t\tconst max_x   = body._bvh_max_x;\r\n\t\tconst max_y   = body._bvh_max_y;\r\n\r\n\t\tlet current       = this._hierarchy;\r\n\t\tlet traverse_left = true;\r\n\r\n\t\tif(!current || !current._bvh_branch) {\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\twhile(current) {\r\n\t\t\tif(traverse_left) {\r\n\t\t\t\ttraverse_left = false;\r\n\r\n\t\t\t\tlet left = current._bvh_branch ? current._bvh_left : null;\r\n\r\n\t\t\t\twhile(\r\n\t\t\t\t\tleft &&\r\n\t\t\t\t\tleft._bvh_max_x >= min_x &&\r\n\t\t\t\t\tleft._bvh_max_y >= min_y &&\r\n\t\t\t\t\tleft._bvh_min_x <= max_x &&\r\n\t\t\t\t\tleft._bvh_min_y <= max_y\r\n\t\t\t\t) {\r\n\t\t\t\t\tcurrent = left;\r\n\t\t\t\t\tleft    = current._bvh_branch ? current._bvh_left : null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst branch = current._bvh_branch;\r\n\t\t\tconst right  = branch ? current._bvh_right : null;\r\n\r\n\t\t\tif(\r\n\t\t\t\tright &&\r\n\t\t\t\tright._bvh_max_x > min_x &&\r\n\t\t\t\tright._bvh_max_y > min_y &&\r\n\t\t\t\tright._bvh_min_x < max_x &&\r\n\t\t\t\tright._bvh_min_y < max_y\r\n\t\t\t) {\r\n\t\t\t\tcurrent       = right;\r\n\t\t\t\ttraverse_left = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(!branch && current !== body) {\r\n\t\t\t\t\tresults.push(current);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet parent = current._bvh_parent;\r\n\r\n\t\t\t\tif(parent) {\r\n\t\t\t\t\twhile(parent && parent._bvh_right === current) {\r\n\t\t\t\t\t\tcurrent = parent;\r\n\t\t\t\t\t\tparent  = current._bvh_parent;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrent = parent;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the bodies within the BVH to a CanvasRenderingContext2D's current path\r\n\t * @param {CanvasRenderingContext2D} context The context to draw to\r\n\t */\r\n\tdraw(context) {\r\n\t\tconst bodies = this._bodies;\r\n\t\tconst count  = bodies.length;\r\n\r\n\t\tfor(let i = 0; i < count; ++i) {\r\n\t\t\tbodies[i].draw(context);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the BVH to a CanvasRenderingContext2D's current path. This is useful for testing out different padding values for bodies.\r\n\t * @param {CanvasRenderingContext2D} context The context to draw to\r\n\t */\r\n\tdrawBVH(context) {\r\n\t\tlet current       = this._hierarchy;\r\n\t\tlet traverse_left = true;\r\n\r\n\t\twhile(current) {\r\n\t\t\tif(traverse_left) {\r\n\t\t\t\ttraverse_left = false;\r\n\r\n\t\t\t\tlet left = current._bvh_branch ? current._bvh_left : null;\r\n\r\n\t\t\t\twhile(left) {\r\n\t\t\t\t\tcurrent = left;\r\n\t\t\t\t\tleft    = current._bvh_branch ? current._bvh_left : null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst branch = current._bvh_branch;\r\n\t\t\tconst min_x  = current._bvh_min_x;\r\n\t\t\tconst min_y  = current._bvh_min_y;\r\n\t\t\tconst max_x  = current._bvh_max_x;\r\n\t\t\tconst max_y  = current._bvh_max_y;\r\n\t\t\tconst right  = branch ? current._bvh_right : null;\r\n\r\n\t\t\tcontext.moveTo(min_x, min_y);\r\n\t\t\tcontext.lineTo(max_x, min_y);\r\n\t\t\tcontext.lineTo(max_x, max_y);\r\n\t\t\tcontext.lineTo(min_x, max_y);\r\n\t\t\tcontext.lineTo(min_x, min_y);\r\n\r\n\t\t\tif(right) {\r\n\t\t\t\tcurrent       = right;\r\n\t\t\t\ttraverse_left = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet parent = current._bvh_parent;\r\n\r\n\t\t\t\tif(parent) {\r\n\t\t\t\t\twhile(parent && parent._bvh_right === current) {\r\n\t\t\t\t\t\tcurrent = parent;\r\n\t\t\t\t\t\tparent  = current._bvh_parent;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrent = parent;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n","/**\r\n * An object used to collect the detailed results of a collision test\r\n *\r\n * > **Note:** It is highly recommended you recycle the same Result object if possible in order to avoid wasting memory\r\n * @class\r\n */\r\nexport default class Result {\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * @desc True if a collision was detected\r\n\t\t * @type {Boolean}\r\n\t\t */\r\n\t\tthis.collision = false;\r\n\r\n\t\t/**\r\n\t\t * @desc The source body tested\r\n\t\t * @type {Circle|Polygon|Point}\r\n\t\t */\r\n\t\tthis.a = null;\r\n\r\n\t\t/**\r\n\t\t * @desc The target body tested against\r\n\t\t * @type {Circle|Polygon|Point}\r\n\t\t */\r\n\t\tthis.b = null;\r\n\r\n\t\t/**\r\n\t\t * @desc True if A is completely contained within B\r\n\t\t * @type {Boolean}\r\n\t\t */\r\n\t\tthis.a_in_b = false;\r\n\r\n\t\t/**\r\n\t\t * @desc True if B is completely contained within A\r\n\t\t * @type {Boolean}\r\n\t\t */\r\n\t\tthis.b_in_a = false;\r\n\r\n\t\t/**\r\n\t\t * @desc The magnitude of the shortest axis of overlap\r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis.overlap = 0;\r\n\r\n\t\t/**\r\n\t\t * @desc The X direction of the shortest axis of overlap\r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis.overlap_x = 0;\r\n\r\n\t\t/**\r\n\t\t * @desc The Y direction of the shortest axis of overlap\r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis.overlap_y = 0;\r\n\t}\r\n};\r\n","/**\r\n * Determines if two bodies are colliding using the Separating Axis Theorem\r\n * @private\r\n * @param {Circle|Polygon|Point} a The source body to test\r\n * @param {Circle|Polygon|Point} b The target body to test against\r\n * @param {Result} [result = null] A Result object on which to store information about the collision\r\n * @param {Boolean} [aabb = true] Set to false to skip the AABB test (useful if you use your own collision heuristic)\r\n * @returns {Boolean}\r\n */\r\nexport default function SAT(a, b, result = null, aabb = true) {\r\n\tconst a_polygon = a._polygon;\r\n\tconst b_polygon = b._polygon;\r\n\r\n\tlet collision = false;\r\n\r\n\tif(result) {\r\n\t\tresult.a         = a;\r\n\t\tresult.b         = b;\r\n\t\tresult.a_in_b    = true;\r\n\t\tresult.b_in_a    = true;\r\n\t\tresult.overlap   = null;\r\n\t\tresult.overlap_x = 0;\r\n\t\tresult.overlap_y = 0;\r\n\t}\r\n\r\n\tif(a_polygon) {\r\n\t\tif(\r\n\t\t\ta._dirty_coords ||\r\n\t\t\ta.x       !== a._x ||\r\n\t\t\ta.y       !== a._y ||\r\n\t\t\ta.angle   !== a._angle ||\r\n\t\t\ta.scale_x !== a._scale_x ||\r\n\t\t\ta.scale_y !== a._scale_y\r\n\t\t) {\r\n\t\t\ta._calculateCoords();\r\n\t\t}\r\n\t}\r\n\r\n\tif(b_polygon) {\r\n\t\tif(\r\n\t\t\tb._dirty_coords ||\r\n\t\t\tb.x       !== b._x ||\r\n\t\t\tb.y       !== b._y ||\r\n\t\t\tb.angle   !== b._angle ||\r\n\t\t\tb.scale_x !== b._scale_x ||\r\n\t\t\tb.scale_y !== b._scale_y\r\n\t\t) {\r\n\t\t\tb._calculateCoords();\r\n\t\t}\r\n\t}\r\n\r\n\tif(!aabb || aabbAABB(a, b)) {\r\n\t\tif(a_polygon && a._dirty_normals) {\r\n\t\t\ta._calculateNormals();\r\n\t\t}\r\n\r\n\t\tif(b_polygon && b._dirty_normals) {\r\n\t\t\tb._calculateNormals();\r\n\t\t}\r\n\r\n\t\tcollision = (\r\n\t\t\ta_polygon && b_polygon ? polygonPolygon(a, b, result) :\r\n\t\t\ta_polygon ? polygonCircle(a, b, result, false) :\r\n\t\t\tb_polygon ? polygonCircle(b, a, result, true) :\r\n\t\t\tcircleCircle(a, b, result)\r\n\t\t);\r\n\t}\r\n\r\n\tif(result) {\r\n\t\tresult.collision = collision;\r\n\t}\r\n\r\n\treturn collision;\r\n};\r\n\r\n/**\r\n * Determines if two bodies' axis aligned bounding boxes are colliding\r\n * @param {Circle|Polygon|Point} a The source body to test\r\n * @param {Circle|Polygon|Point} b The target body to test against\r\n */\r\nfunction aabbAABB(a, b) {\r\n\tconst a_polygon = a._polygon;\r\n\tconst a_x       = a_polygon ? 0 : a.x;\r\n\tconst a_y       = a_polygon ? 0 : a.y;\r\n\tconst a_radius  = a_polygon ? 0 : a.radius * a.scale;\r\n\tconst a_min_x   = a_polygon ? a._min_x : a_x - a_radius;\r\n\tconst a_min_y   = a_polygon ? a._min_y : a_y - a_radius;\r\n\tconst a_max_x   = a_polygon ? a._max_x : a_x + a_radius;\r\n\tconst a_max_y   = a_polygon ? a._max_y : a_y + a_radius;\r\n\r\n\tconst b_polygon = b._polygon;\r\n\tconst b_x       = b_polygon ? 0 : b.x;\r\n\tconst b_y       = b_polygon ? 0 : b.y;\r\n\tconst b_radius  = b_polygon ? 0 : b.radius * b.scale;\r\n\tconst b_min_x   = b_polygon ? b._min_x : b_x - b_radius;\r\n\tconst b_min_y   = b_polygon ? b._min_y : b_y - b_radius;\r\n\tconst b_max_x   = b_polygon ? b._max_x : b_x + b_radius;\r\n\tconst b_max_y   = b_polygon ? b._max_y : b_y + b_radius;\r\n\r\n\treturn a_min_x < b_max_x && a_min_y < b_max_y && a_max_x > b_min_x && a_max_y > b_min_y;\r\n}\r\n\r\n/**\r\n * Determines if two polygons are colliding\r\n * @param {Polygon} a The source polygon to test\r\n * @param {Polygon} b The target polygon to test against\r\n * @param {Result} [result = null] A Result object on which to store information about the collision\r\n * @returns {Boolean}\r\n */\r\nfunction polygonPolygon(a, b, result = null) {\r\n\tconst a_count = a._coords.length;\r\n\tconst b_count = b._coords.length;\r\n\r\n\t// Handle points specially\r\n\tif(a_count === 2 && b_count === 2) {\r\n\t\tconst a_coords = a._coords;\r\n\t\tconst b_coords = b._coords;\r\n\r\n\t\tif(result) {\r\n\t\t\tresult.overlap = 0;\r\n\t\t}\r\n\r\n\t\treturn a_coords[0] === b_coords[0] && a_coords[1] === b_coords[1];\r\n\t}\r\n\r\n\tconst a_coords  = a._coords;\r\n\tconst b_coords  = b._coords;\r\n\tconst a_normals = a._normals;\r\n\tconst b_normals = b._normals;\r\n\r\n\tif(a_count > 2) {\r\n\t\tfor(let ix = 0, iy = 1; ix < a_count; ix += 2, iy += 2) {\r\n\t\t\tif(separatingAxis(a_coords, b_coords, a_normals[ix], a_normals[iy], result)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif(b_count > 2) {\r\n\t\tfor(let ix = 0, iy = 1; ix < b_count; ix += 2, iy += 2) {\r\n\t\t\tif(separatingAxis(a_coords, b_coords, b_normals[ix], b_normals[iy], result)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Determines if a polygon and a circle are colliding\r\n * @param {Polygon} a The source polygon to test\r\n * @param {Circle} b The target circle to test against\r\n * @param {Result} [result = null] A Result object on which to store information about the collision\r\n * @param {Boolean} [reverse = false] Set to true to reverse a and b in the result parameter when testing circle->polygon instead of polygon->circle\r\n * @returns {Boolean}\r\n */\r\nfunction polygonCircle(a, b, result = null, reverse = false) {\r\n\tconst a_coords       = a._coords;\r\n\tconst a_edges        = a._edges;\r\n\tconst a_normals      = a._normals;\r\n\tconst b_x            = b.x;\r\n\tconst b_y            = b.y;\r\n\tconst b_radius       = b.radius * b.scale;\r\n\tconst b_radius2      = b_radius * 2;\r\n\tconst radius_squared = b_radius * b_radius;\r\n\tconst count          = a_coords.length;\r\n\r\n\tlet a_in_b    = true;\r\n\tlet b_in_a    = true;\r\n\tlet overlap   = null;\r\n\tlet overlap_x = 0;\r\n\tlet overlap_y = 0;\r\n\r\n\t// Handle points specially\r\n\tif(count === 2) {\r\n\t\tconst coord_x        = b_x - a_coords[0];\r\n\t\tconst coord_y        = b_y - a_coords[1];\r\n\t\tconst length_squared = coord_x * coord_x + coord_y * coord_y;\r\n\r\n\t\tif(length_squared > radius_squared) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif(result) {\r\n\t\t\tconst length = Math.sqrt(length_squared);\r\n\r\n\t\t\toverlap   = b_radius - length;\r\n\t\t\toverlap_x = coord_x / length;\r\n\t\t\toverlap_y = coord_y / length;\r\n\t\t\tb_in_a    = false;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tfor(let ix = 0, iy = 1; ix < count; ix += 2, iy += 2) {\r\n\t\t\tconst coord_x = b_x - a_coords[ix];\r\n\t\t\tconst coord_y = b_y - a_coords[iy];\r\n\t\t\tconst edge_x  = a_edges[ix];\r\n\t\t\tconst edge_y  = a_edges[iy];\r\n\t\t\tconst dot     = coord_x * edge_x + coord_y * edge_y;\r\n\t\t\tconst region  = dot < 0 ? -1 : dot > edge_x * edge_x + edge_y * edge_y ? 1 : 0;\r\n\r\n\t\t\tlet tmp_overlapping = false;\r\n\t\t\tlet tmp_overlap     = 0;\r\n\t\t\tlet tmp_overlap_x   = 0;\r\n\t\t\tlet tmp_overlap_y   = 0;\r\n\r\n\t\t\tif(result && a_in_b && coord_x * coord_x + coord_y * coord_y > radius_squared) {\r\n\t\t\t\ta_in_b = false;\r\n\t\t\t}\r\n\r\n\t\t\tif(region) {\r\n\t\t\t\tconst left     = region === -1;\r\n\t\t\t\tconst other_x  = left ? (ix === 0 ? count - 2 : ix - 2) : (ix === count - 2 ? 0 : ix + 2);\r\n\t\t\t\tconst other_y  = other_x + 1;\r\n\t\t\t\tconst coord2_x = b_x - a_coords[other_x];\r\n\t\t\t\tconst coord2_y = b_y - a_coords[other_y];\r\n\t\t\t\tconst edge2_x  = a_edges[other_x];\r\n\t\t\t\tconst edge2_y  = a_edges[other_y];\r\n\t\t\t\tconst dot2     = coord2_x * edge2_x + coord2_y * edge2_y;\r\n\t\t\t\tconst region2  = dot2 < 0 ? -1 : dot2 > edge2_x * edge2_x + edge2_y * edge2_y ? 1 : 0;\r\n\r\n\t\t\t\tif(region2 === -region) {\r\n\t\t\t\t\tconst target_x       = left ? coord_x : coord2_x;\r\n\t\t\t\t\tconst target_y       = left ? coord_y : coord2_y;\r\n\t\t\t\t\tconst length_squared = target_x * target_x + target_y * target_y;\r\n\r\n\t\t\t\t\tif(length_squared > radius_squared) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(result) {\r\n\t\t\t\t\t\tconst length = Math.sqrt(length_squared);\r\n\r\n\t\t\t\t\t\ttmp_overlapping = true;\r\n\t\t\t\t\t\ttmp_overlap     = b_radius - length;\r\n\t\t\t\t\t\ttmp_overlap_x   = target_x / length;\r\n\t\t\t\t\t\ttmp_overlap_y   = target_y / length;\r\n\t\t\t\t\t\tb_in_a          = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst normal_x        = a_normals[ix];\r\n\t\t\t\tconst normal_y        = a_normals[iy];\r\n\t\t\t\tconst length          = coord_x * normal_x + coord_y * normal_y;\r\n\t\t\t\tconst absolute_length = length < 0 ? -length : length;\r\n\r\n\t\t\t\tif(length > 0 && absolute_length > b_radius) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(result) {\r\n\t\t\t\t\ttmp_overlapping = true;\r\n\t\t\t\t\ttmp_overlap     = b_radius - length;\r\n\t\t\t\t\ttmp_overlap_x   = normal_x;\r\n\t\t\t\t\ttmp_overlap_y   = normal_y;\r\n\r\n\t\t\t\t\tif(b_in_a && length >= 0 || tmp_overlap < b_radius2) {\r\n\t\t\t\t\t\tb_in_a = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(tmp_overlapping && (overlap === null || overlap > tmp_overlap)) {\r\n\t\t\t\toverlap   = tmp_overlap;\r\n\t\t\t\toverlap_x = tmp_overlap_x;\r\n\t\t\t\toverlap_y = tmp_overlap_y;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif(result) {\r\n\t\tresult.a_in_b    = reverse ? b_in_a : a_in_b;\r\n\t\tresult.b_in_a    = reverse ? a_in_b : b_in_a;\r\n\t\tresult.overlap   = overlap;\r\n\t\tresult.overlap_x = reverse ? -overlap_x : overlap_x;\r\n\t\tresult.overlap_y = reverse ? -overlap_y : overlap_y;\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Determines if two circles are colliding\r\n * @param {Circle} a The source circle to test\r\n * @param {Circle} b The target circle to test against\r\n * @param {Result} [result = null] A Result object on which to store information about the collision\r\n * @returns {Boolean}\r\n */\r\nfunction circleCircle(a, b, result = null) {\r\n\tconst a_radius       = a.radius * a.scale;\r\n\tconst b_radius       = b.radius * b.scale;\r\n\tconst difference_x   = b.x - a.x;\r\n\tconst difference_y   = b.y - a.y;\r\n\tconst radius_sum     = a_radius + b_radius;\r\n\tconst length_squared = difference_x * difference_x + difference_y * difference_y;\r\n\r\n\tif(length_squared > radius_sum * radius_sum) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif(result) {\r\n\t\tconst length = Math.sqrt(length_squared);\r\n\r\n\t\tresult.a_in_b    = a_radius <= b_radius && length <= b_radius - a_radius;\r\n\t\tresult.b_in_a    = b_radius <= a_radius && length <= a_radius - b_radius;\r\n\t\tresult.overlap   = radius_sum - length;\r\n\t\tresult.overlap_x = difference_x / length;\r\n\t\tresult.overlap_y = difference_y / length;\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Determines if two polygons are separated by an axis\r\n * @param {Array<Number[]>} a_coords The coordinates of the polygon to test\r\n * @param {Array<Number[]>} b_coords The coordinates of the polygon to test against\r\n * @param {Number} x The X direction of the axis\r\n * @param {Number} y The Y direction of the axis\r\n * @param {Result} [result = null] A Result object on which to store information about the collision\r\n * @returns {Boolean}\r\n */\r\nfunction separatingAxis(a_coords, b_coords, x, y, result = null) {\r\n\tconst a_count = a_coords.length;\r\n\tconst b_count = b_coords.length;\r\n\r\n\tif(!a_count || !b_count) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tlet a_start = null;\r\n\tlet a_end   = null;\r\n\tlet b_start = null;\r\n\tlet b_end   = null;\r\n\r\n\tfor(let ix = 0, iy = 1; ix < a_count; ix += 2, iy += 2) {\r\n\t\tconst dot = a_coords[ix] * x + a_coords[iy] * y;\r\n\r\n\t\tif(a_start === null || a_start > dot) {\r\n\t\t\ta_start = dot;\r\n\t\t}\r\n\r\n\t\tif(a_end === null || a_end < dot) {\r\n\t\t\ta_end = dot;\r\n\t\t}\r\n\t}\r\n\r\n\tfor(let ix = 0, iy = 1; ix < b_count; ix += 2, iy += 2) {\r\n\t\tconst dot = b_coords[ix] * x + b_coords[iy] * y;\r\n\r\n\t\tif(b_start === null || b_start > dot) {\r\n\t\t\tb_start = dot;\r\n\t\t}\r\n\r\n\t\tif(b_end === null || b_end < dot) {\r\n\t\t\tb_end = dot;\r\n\t\t}\r\n\t}\r\n\r\n\tif(a_start > b_end || a_end < b_start) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif(result) {\r\n\t\tlet overlap = 0;\r\n\r\n\t\tif(a_start < b_start) {\r\n\t\t\tresult.a_in_b = false;\r\n\r\n\t\t\tif(a_end < b_end) {\r\n\t\t\t\toverlap       = a_end - b_start;\r\n\t\t\t\tresult.b_in_a = false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst option1 = a_end - b_start;\r\n\t\t\t\tconst option2 = b_end - a_start;\r\n\r\n\t\t\t\toverlap = option1 < option2 ? option1 : -option2;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tresult.b_in_a = false;\r\n\r\n\t\t\tif(a_end > b_end) {\r\n\t\t\t\toverlap       = a_start - b_end;\r\n\t\t\t\tresult.a_in_b = false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst option1 = a_end - b_start;\r\n\t\t\t\tconst option2 = b_end - a_start;\r\n\r\n\t\t\t\toverlap = option1 < option2 ? option1 : -option2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst current_overlap  = result.overlap;\r\n\t\tconst absolute_overlap = overlap < 0 ? -overlap : overlap;\r\n\r\n\t\tif(current_overlap === null || current_overlap > absolute_overlap) {\r\n\t\t\tconst sign = overlap < 0 ? -1 : 1;\r\n\r\n\t\t\tresult.overlap   = absolute_overlap;\r\n\t\t\tresult.overlap_x = x * sign;\r\n\t\t\tresult.overlap_y = y * sign;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n","import Result from './Result.js';\r\nimport SAT    from './SAT.js';\r\n\r\n/**\r\n * The base class for bodies used to detect collisions\r\n * @class\r\n * @protected\r\n */\r\nexport default class Body {\r\n\t/**\r\n\t * @constructor\r\n\t * @param {Number} [x = 0] The starting X coordinate\r\n\t * @param {Number} [y = 0] The starting Y coordinate\r\n\t * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\r\n\t */\r\n\tconstructor(x = 0, y = 0, padding = 0) {\r\n\t\t/**\r\n\t\t * @desc The X coordinate of the body\r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis.x = x;\r\n\r\n\t\t/**\r\n\t\t * @desc The Y coordinate of the body\r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis.y = y;\r\n\r\n\t\t/**\r\n\t\t * @desc The amount to pad the bounding volume when testing for potential collisions\r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis.padding = padding;\r\n\r\n\t\t/** @private */\r\n\t\tthis._circle = false;\r\n\r\n\t\t/** @private */\r\n\t\tthis._polygon = false;\r\n\r\n\t\t/** @private */\r\n\t\tthis._point = false;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh = null;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_parent = null;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_branch = false;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_padding = padding;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_min_x = 0;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_min_y = 0;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_max_x = 0;\r\n\r\n\t\t/** @private */\r\n\t\tthis._bvh_max_y = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if the body is colliding with another body\r\n\t * @param {Circle|Polygon|Point} target The target body to test against\r\n\t * @param {Result} [result = null] A Result object on which to store information about the collision\r\n\t * @param {Boolean} [aabb = true] Set to false to skip the AABB test (useful if you use your own potential collision heuristic)\r\n\t * @returns {Boolean}\r\n\t */\r\n\tcollides(target, result = null, aabb = true) {\r\n\t\treturn SAT(this, target, result, aabb);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of potential collisions\r\n\t * @returns {Array<Body>}\r\n\t */\r\n\tpotentials() {\r\n\t\tconst bvh = this._bvh;\r\n\r\n\t\tif(bvh === null) {\r\n\t\t\tthrow new Error('Body does not belong to a collision system');\r\n\t\t}\r\n\r\n\t\treturn bvh.potentials(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the body from its current collision system\r\n\t */\r\n\tremove() {\r\n\t\tconst bvh = this._bvh;\r\n\r\n\t\tif(bvh) {\r\n\t\t\tbvh.remove(this, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link Result} used to collect the detailed results of a collision test\r\n\t */\r\n\tcreateResult() {\r\n\t\treturn new Result();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Result used to collect the detailed results of a collision test\r\n\t */\r\n\tstatic createResult() {\r\n\t\treturn new Result();\r\n\t}\r\n};\r\n","import Body from './Body.js';\r\n\r\n/**\r\n * A circle used to detect collisions\r\n * @class\r\n */\r\nexport default class Circle extends Body {\r\n\t/**\r\n\t * @constructor\r\n\t * @param {Number} [x = 0] The starting X coordinate\r\n\t * @param {Number} [y = 0] The starting Y coordinate\r\n\t * @param {Number} [radius = 0] The radius\r\n\t * @param {Number} [scale = 1] The scale\r\n\t * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\r\n\t */\r\n\tconstructor(x = 0, y = 0, radius = 0, scale = 1, padding = 0) {\r\n\t\tsuper(x, y, padding);\r\n\r\n\t\t/**\r\n\t\t * @desc\r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis.radius = radius;\r\n\r\n\t\t/**\r\n\t\t * @desc\r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis.scale = scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the circle to a CanvasRenderingContext2D's current path\r\n\t * @param {CanvasRenderingContext2D} context The context to add the arc to\r\n\t */\r\n\tdraw(context) {\r\n\t\tconst x      = this.x;\r\n\t\tconst y      = this.y;\r\n\t\tconst radius = this.radius * this.scale;\r\n\r\n\t\tcontext.moveTo(x + radius, y);\r\n\t\tcontext.arc(x, y, radius, 0, Math.PI * 2);\r\n\t}\r\n};\r\n","import Body from './Body.js';\r\n\r\n/**\r\n * A polygon used to detect collisions\r\n * @class\r\n */\r\nexport default class Polygon extends Body {\r\n\t/**\r\n\t * @constructor\r\n\t * @param {Number} [x = 0] The starting X coordinate\r\n\t * @param {Number} [y = 0] The starting Y coordinate\r\n\t * @param {Array<Number[]>} [points = []] An array of coordinate pairs making up the polygon - [[x1, y1], [x2, y2], ...]\r\n\t * @param {Number} [angle = 0] The starting rotation in radians\r\n\t * @param {Number} [scale_x = 1] The starting scale along the X axis\r\n\t * @param {Number} [scale_y = 1] The starting scale long the Y axis\r\n\t * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\r\n\t */\r\n\tconstructor(x = 0, y = 0, points = [], angle = 0, scale_x = 1, scale_y = 1, padding = 0) {\r\n\t\tsuper(x, y, padding);\r\n\r\n\t\t/**\r\n\t\t * @desc The angle of the body in radians\r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis.angle = angle;\r\n\r\n\t\t/**\r\n\t\t * @desc The scale of the body along the X axis\r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis.scale_x = scale_x;\r\n\r\n\t\t/**\r\n\t\t * @desc The scale of the body along the Y axis\r\n\t\t * @type {Number}\r\n\t\t */\r\n\t\tthis.scale_y = scale_y;\r\n\r\n\r\n\t\t/** @private */\r\n\t\tthis._polygon = true;\r\n\r\n\t\t/** @private */\r\n\t\tthis._x = x;\r\n\r\n\t\t/** @private */\r\n\t\tthis._y = y;\r\n\r\n\t\t/** @private */\r\n\t\tthis._angle = angle;\r\n\r\n\t\t/** @private */\r\n\t\tthis._scale_x = scale_x;\r\n\r\n\t\t/** @private */\r\n\t\tthis._scale_y = scale_y;\r\n\r\n\t\t/** @private */\r\n\t\tthis._min_x = 0;\r\n\r\n\t\t/** @private */\r\n\t\tthis._min_y = 0;\r\n\r\n\t\t/** @private */\r\n\t\tthis._max_x = 0;\r\n\r\n\t\t/** @private */\r\n\t\tthis._max_y = 0;\r\n\r\n\t\t/** @private */\r\n\t\tthis._points = null;\r\n\r\n\t\t/** @private */\r\n\t\tthis._coords = null;\r\n\r\n\t\t/** @private */\r\n\t\tthis._edges = null;\r\n\r\n\t\t/** @private */\r\n\t\tthis._normals = null;\r\n\r\n\t\t/** @private */\r\n\t\tthis._dirty_coords = true;\r\n\r\n\t\t/** @private */\r\n\t\tthis._dirty_normals = true;\r\n\r\n\t\tPolygon.prototype.setPoints.call(this, points);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the polygon to a CanvasRenderingContext2D's current path\r\n\t * @param {CanvasRenderingContext2D} context The context to add the shape to\r\n\t */\r\n\tdraw(context) {\r\n\t\tif(\r\n\t\t\tthis._dirty_coords ||\r\n\t\t\tthis.x       !== this._x ||\r\n\t\t\tthis.y       !== this._y ||\r\n\t\t\tthis.angle   !== this._angle ||\r\n\t\t\tthis.scale_x !== this._scale_x ||\r\n\t\t\tthis.scale_y !== this._scale_y\r\n\t\t) {\r\n\t\t\tthis._calculateCoords();\r\n\t\t}\r\n\r\n\t\tconst coords = this._coords;\r\n\r\n\t\tif(coords.length === 2) {\r\n\t\t\tcontext.moveTo(coords[0], coords[1]);\r\n\t\t\tcontext.arc(coords[0], coords[1], 1, 0, Math.PI * 2);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcontext.moveTo(coords[0], coords[1]);\r\n\r\n\t\t\tfor(let i = 2; i < coords.length; i += 2) {\r\n\t\t\t\tcontext.lineTo(coords[i], coords[i + 1]);\r\n\t\t\t}\r\n\r\n\t\t\tif(coords.length > 4) {\r\n\t\t\t\tcontext.lineTo(coords[0], coords[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the points making up the polygon. It's important to use this function when changing the polygon's shape to ensure internal data is also updated.\r\n\t * @param {Array<Number[]>} new_points An array of coordinate pairs making up the polygon - [[x1, y1], [x2, y2], ...]\r\n\t */\r\n\tsetPoints(new_points) {\r\n\t\tconst count = new_points.length;\r\n\r\n\t\tthis._points  = new Float64Array(count * 2);\r\n\t\tthis._coords  = new Float64Array(count * 2);\r\n\t\tthis._edges   = new Float64Array(count * 2);\r\n\t\tthis._normals = new Float64Array(count * 2);\r\n\r\n\t\tconst points = this._points;\r\n\r\n\t\tfor(let i = 0, ix = 0, iy = 1; i < count; ++i, ix += 2, iy += 2) {\r\n\t\t\tconst new_point = new_points[i];\r\n\r\n\t\t\tpoints[ix] = new_point[0];\r\n\t\t\tpoints[iy] = new_point[1];\r\n\t\t}\r\n\r\n\t\tthis._dirty_coords = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates and caches the polygon's world coordinates based on its points, angle, and scale\r\n\t */\r\n\t_calculateCoords() {\r\n\t\tconst x       = this.x;\r\n\t\tconst y       = this.y;\r\n\t\tconst angle   = this.angle;\r\n\t\tconst scale_x = this.scale_x;\r\n\t\tconst scale_y = this.scale_y;\r\n\t\tconst points  = this._points;\r\n\t\tconst coords  = this._coords;\r\n\t\tconst count   = points.length;\r\n\r\n\t\tlet min_x;\r\n\t\tlet max_x;\r\n\t\tlet min_y;\r\n\t\tlet max_y;\r\n\r\n\t\tfor(let ix = 0, iy = 1; ix < count; ix += 2, iy += 2) {\r\n\t\t\tlet coord_x = points[ix] * scale_x;\r\n\t\t\tlet coord_y = points[iy] * scale_y;\r\n\r\n\t\t\tif(angle) {\r\n\t\t\t\tconst cos   = Math.cos(angle);\r\n\t\t\t\tconst sin   = Math.sin(angle);\r\n\t\t\t\tconst tmp_x = coord_x;\r\n\t\t\t\tconst tmp_y = coord_y;\r\n\r\n\t\t\t\tcoord_x = tmp_x * cos - tmp_y * sin;\r\n\t\t\t\tcoord_y = tmp_x * sin + tmp_y * cos;\r\n\t\t\t}\r\n\r\n\t\t\tcoord_x += x;\r\n\t\t\tcoord_y += y;\r\n\r\n\t\t\tcoords[ix] = coord_x;\r\n\t\t\tcoords[iy] = coord_y;\r\n\r\n\t\t\tif(ix === 0) {\r\n\t\t\t\tmin_x = max_x = coord_x;\r\n\t\t\t\tmin_y = max_y = coord_y;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(coord_x < min_x) {\r\n\t\t\t\t\tmin_x = coord_x;\r\n\t\t\t\t}\r\n\t\t\t\telse if(coord_x > max_x) {\r\n\t\t\t\t\tmax_x = coord_x;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(coord_y < min_y) {\r\n\t\t\t\t\tmin_y = coord_y;\r\n\t\t\t\t}\r\n\t\t\t\telse if(coord_y > max_y) {\r\n\t\t\t\t\tmax_y = coord_y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._x             = x;\r\n\t\tthis._y             = y;\r\n\t\tthis._angle         = angle;\r\n\t\tthis._scale_x       = scale_x;\r\n\t\tthis._scale_y       = scale_y;\r\n\t\tthis._min_x         = min_x;\r\n\t\tthis._min_y         = min_y;\r\n\t\tthis._max_x         = max_x;\r\n\t\tthis._max_y         = max_y;\r\n\t\tthis._dirty_coords  = false;\r\n\t\tthis._dirty_normals = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normals and edges of the polygon's sides\r\n\t */\r\n\t_calculateNormals() {\r\n\t\tconst coords  = this._coords;\r\n\t\tconst edges   = this._edges;\r\n\t\tconst normals = this._normals;\r\n\t\tconst count   = coords.length;\r\n\r\n\t\tfor(let ix = 0, iy = 1; ix < count; ix += 2, iy += 2) {\r\n\t\t\tconst next   = ix + 2 < count ? ix + 2 : 0;\r\n\t\t\tconst x      = coords[next] - coords[ix];\r\n\t\t\tconst y      = coords[next + 1] - coords[iy];\r\n\t\t\tconst length = x || y ? Math.sqrt(x * x + y * y) : 0;\r\n\r\n\t\t\tedges[ix]   = x;\r\n\t\t\tedges[iy]   = y;\r\n\t\t\tnormals[ix] = length ? y / length : 0;\r\n\t\t\tnormals[iy] = length ? -x / length : 0;\r\n\t\t}\r\n\r\n\t\tthis._dirty_normals = false;\r\n\t}\r\n};\r\n","import Polygon from './Polygon.js';\r\n\r\n/**\r\n * A point used to detect collisions\r\n * @class\r\n */\r\nexport default class Point extends Polygon {\r\n\t/**\r\n\t * @constructor\r\n\t * @param {Number} [x = 0] The starting X coordinate\r\n\t * @param {Number} [y = 0] The starting Y coordinate\r\n\t * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\r\n\t */\r\n\tconstructor(x = 0, y = 0, padding = 0) {\r\n\t\tsuper(x, y, [[0, 0]], 0, 1, 1, padding);\r\n\r\n\t\t/** @private */\r\n\t\tthis._point = true;\r\n\t}\r\n};\r\n\r\nPoint.prototype.setPoints = undefined;\r\n","import BVH     from './modules/BVH.js';\r\nimport Circle  from './modules/Circle.js';\r\nimport Polygon from './modules/Polygon.js';\r\nimport Point   from './modules/Point.js';\r\nimport Result  from './modules/Result.js';\r\nimport SAT     from './modules/SAT.js';\r\n\r\n/**\r\n * A collision system used to track bodies in order to improve collision detection performance\r\n * @class\r\n */\r\nclass Collisions {\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tconstructor() {\r\n\t\t/** @private */\r\n\t\tthis._bvh = new BVH();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link Circle} and inserts it into the collision system\r\n\t * @param {Number} [x = 0] The starting X coordinate\r\n\t * @param {Number} [y = 0] The starting Y coordinate\r\n\t * @param {Number} [radius = 0] The radius\r\n\t * @param {Number} [scale = 1] The scale\r\n\t * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\r\n\t * @returns {Circle}\r\n\t */\r\n\tcreateCircle(x = 0, y = 0, radius = 0, scale = 1, padding = 0) {\r\n\t\tconst body = new Circle(x, y, radius, scale, padding);\r\n\r\n\t\tthis._bvh.insert(body);\r\n\r\n\t\treturn body;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link Polygon} and inserts it into the collision system\r\n\t * @param {Number} [x = 0] The starting X coordinate\r\n\t * @param {Number} [y = 0] The starting Y coordinate\r\n\t * @param {Array<Number[]>} [points = []] An array of coordinate pairs making up the polygon - [[x1, y1], [x2, y2], ...]\r\n\t * @param {Number} [angle = 0] The starting rotation in radians\r\n\t * @param {Number} [scale_x = 1] The starting scale along the X axis\r\n\t * @param {Number} [scale_y = 1] The starting scale long the Y axis\r\n\t * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\r\n\t * @returns {Polygon}\r\n\t */\r\n\tcreatePolygon(x = 0, y = 0, points = [[0, 0]], angle = 0, scale_x = 1, scale_y = 1, padding = 0) {\r\n\t\tconst body = new Polygon(x, y, points, angle, scale_x, scale_y, padding);\r\n\r\n\t\tthis._bvh.insert(body);\r\n\r\n\t\treturn body;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link Point} and inserts it into the collision system\r\n\t * @param {Number} [x = 0] The starting X coordinate\r\n\t * @param {Number} [y = 0] The starting Y coordinate\r\n\t * @param {Number} [padding = 0] The amount to pad the bounding volume when testing for potential collisions\r\n\t * @returns {Point}\r\n\t */\r\n\tcreatePoint(x = 0, y = 0, padding = 0) {\r\n\t\tconst body = new Point(x, y, padding);\r\n\r\n\t\tthis._bvh.insert(body);\r\n\r\n\t\treturn body;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a {@link Result} used to collect the detailed results of a collision test\r\n\t */\r\n\tcreateResult() {\r\n\t\treturn new Result();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Result used to collect the detailed results of a collision test\r\n\t */\r\n\tstatic createResult() {\r\n\t\treturn new Result();\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts bodies into the collision system\r\n\t * @param {...Circle|...Polygon|...Point} bodies\r\n\t */\r\n\tinsert(...bodies) {\r\n\t\tfor(const body of bodies) {\r\n\t\t\tthis._bvh.insert(body, false);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes bodies from the collision system\r\n\t * @param {...Circle|...Polygon|...Point} bodies\r\n\t */\r\n\tremove(...bodies) {\r\n\t\tfor(const body of bodies) {\r\n\t\t\tthis._bvh.remove(body, false);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the collision system. This should be called before any collisions are tested.\r\n\t */\r\n\tupdate() {\r\n\t\tthis._bvh.update();\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the bodies within the system to a CanvasRenderingContext2D's current path\r\n\t * @param {CanvasRenderingContext2D} context The context to draw to\r\n\t */\r\n\tdraw(context) {\r\n\t\treturn this._bvh.draw(context);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the system's BVH to a CanvasRenderingContext2D's current path. This is useful for testing out different padding values for bodies.\r\n\t * @param {CanvasRenderingContext2D} context The context to draw to\r\n\t */\r\n\tdrawBVH(context) {\r\n\t\treturn this._bvh.drawBVH(context);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of potential collisions for a body\r\n\t * @param {Circle|Polygon|Point} body The body to test for potential collisions against\r\n\t * @returns {Array<Body>}\r\n\t */\r\n\tpotentials(body) {\r\n\t\treturn this._bvh.potentials(body);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if two bodies are colliding\r\n\t * @param {Circle|Polygon|Point} target The target body to test against\r\n\t * @param {Result} [result = null] A Result object on which to store information about the collision\r\n\t * @param {Boolean} [aabb = true] Set to false to skip the AABB test (useful if you use your own potential collision heuristic)\r\n\t * @returns {Boolean}\r\n\t */\r\n\tcollides(source, target, result = null, aabb = true) {\r\n\t\treturn SAT(source, target, result, aabb);\r\n\t}\r\n};\r\n\r\nexport {\r\n\tCollisions as default,\r\n\tCollisions,\r\n\tResult,\r\n\tCircle,\r\n\tPolygon,\r\n\tPoint,\r\n};\r\n","import { Collisions, Polygon } from \"../../Collisions/Collisions.js\";\r\nimport { Result } from \"../../Collisions/Collisions.js\";\r\nimport Game from \"./game.js\";\r\n\r\nexport default class CollisionSystem {\r\n  system: Collisions;\r\n  results: Result;\r\n  entities: Polygon[];\r\n  game: Game;\r\n  constructor(game: Game) {\r\n    this.system = new Collisions();\r\n    this.results = new Result();\r\n    this.entities = [];\r\n    this.game = game;\r\n  }\r\n  addPlayer() {\r\n    \r\n    let x = this.game.Link.position.x*32;\r\n    let y = this.game.Link.position.y*34;\r\n    let link = this.system.createPolygon(x,y+120,[[0,0],[0,30],[30,30],[30,0]])\r\n    this.system.update();\r\n    let potentials = link.potentials();\r\n \r\n    for (let body of potentials) {\r\n      if (link.collides(body, this.results)) {\r\n        this.game.Link.position.x -= this.results.overlap_x * 0.1;\r\n        this.game.Link.position.y -= this.results.overlap_y * 0.1;\r\n      }\r\n    }\r\n    this.system.remove(link)\r\n    this.system.update();\r\n  }\r\n  createMap(tilemap:number[]) {\r\n    if(tilemap !== undefined){\r\n      for (let entity of this.entities) {\r\n        entity.remove();\r\n      }\r\n      this.entities = [];\r\n      this.system.update();\r\n      let output=[];\r\n         for (let i = 0; i < tilemap.length / 4; i++) {\r\n           output.push([\r\n             tilemap[0 + i * 4],\r\n             tilemap[1 + i * 4],\r\n             tilemap[2 + i * 4],\r\n             tilemap[3 + i * 4],\r\n           ]);\r\n         }\r\n         return output\r\n        }\r\n      }\r\n\r\n  makeScreen(tilemap:[[number,number,number,number]]){\r\n    if(tilemap!== undefined){\r\nthis.entities.forEach((entity:Polygon)=>{\r\nthis.system.remove(entity)\r\n})\r\nthis.entities =[]\r\n      for (let i = 0; i < tilemap.length; i++) {\r\n        let tile:[number,number,number,number] = tilemap[i];\r\n        let temp = this.system.createPolygon(tile[0], tile[1], [\r\n          [0, 0],\r\n          [0, 34],\r\n          [32, 34],\r\n          [32, 0],\r\n        ]);\r\n        this.entities.push(temp);\r\n      }\r\n      this.system.update();\r\n    }\r\n  }\r\n  drawSystem(context:CanvasRenderingContext2D,debug:boolean|string = 'draw') {\r\n    if(debug){\r\n      this.game.debugMode(context)\r\n    }else if (debug === 'draw'){\r\n    this.system.draw(context);\r\n    this.system.drawBVH(context);\r\n    }\r\n  }\r\n  parseMap(){\r\n\r\n  }\r\n}\r\n","\r\n/**\r\n *\r\n *\r\n * @param {CanvasRenderingContext2D} ctx\r\n */\r\nfunction showGrid(ctx:CanvasRenderingContext2D){\r\n    let canvas = {\r\n        width:512,\r\n        height:480\r\n    }\r\n\r\n    for(let i = -16 ; i <= 496 ; i+=34){\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, i);\r\n        ctx.lineTo(canvas.width, i);\r\n        ctx.stroke();\r\n    }\r\n    for(let j = 0 ; j <= 512 ; j+=32){\r\n        ctx.beginPath();\r\n        ctx.moveTo(j,0);\r\n        ctx.lineTo(j,canvas.height);\r\n        ctx.stroke();\r\n    }\r\n     ctx.beginPath();\r\n\t ctx.moveTo(0, 480);\r\n\t ctx.lineTo(canvas.width, 480);\r\n     ctx.stroke();\r\n     ctx.fillStyle='black'\r\n\r\n}\r\nexport default showGrid\r\n/*\r\n[0,120,32,34]\r\n\r\n\r\n*/","import showGrid from \"./showScreenGrid\";\r\nlet points:Set<any> = new Set()\r\nlet map:[number,number,number,number][] =[ \r\n[ 0, 120, 32, 154 ], \r\n[ 0, 154, 32, 188 ], \r\n[ 0, 188, 32, 222 ], \r\n[ 0, 222, 32, 256 ], \r\n[ 0, 256, 32, 290 ], \r\n[ 0, 290, 32, 324 ], \r\n[ 0, 324, 32, 358 ], \r\n[ 0, 358, 32, 392 ], \r\n[ 0, 392, 32, 426 ], \r\n[ 0, 426, 32, 460 ], \r\n[ 32, 120, 64, 154 ], \r\n[ 32, 154, 64, 188 ], \r\n[ 32, 188, 64, 222 ], \r\n[ 32, 222, 64, 256 ], \r\n[ 32, 256, 64, 290 ], \r\n[ 32, 290, 64, 324 ], \r\n[ 32, 324, 64, 358 ], \r\n[ 32, 358, 64, 392 ], \r\n[ 32, 392, 64, 426 ], \r\n[ 32, 426, 64, 460 ], \r\n[ 64, 120, 96, 154 ], \r\n[ 64, 154, 96, 188 ], \r\n[ 64, 188, 96, 222 ], \r\n[ 64, 222, 96, 256 ], \r\n[ 64, 256, 96, 290 ], \r\n[ 64, 290, 96, 324 ], \r\n[ 64, 324, 96, 358 ], \r\n[ 64, 358, 96, 392 ], \r\n[ 64, 392, 96, 426 ], \r\n[ 64, 426, 96, 460 ], \r\n[ 96, 120, 128, 154 ], \r\n[ 96, 154, 128, 188 ], \r\n[ 96, 188, 128, 222 ], \r\n[ 96, 222, 128, 256 ], \r\n[ 96, 256, 128, 290 ], \r\n[ 96, 290, 128, 324 ], \r\n[ 96, 324, 128, 358 ], \r\n[ 96, 358, 128, 392 ], \r\n[ 96, 392, 128, 426 ], \r\n[ 96, 426, 128, 460 ], \r\n[ 128, 120, 160, 154 ], \r\n[ 128, 154, 160, 188 ], \r\n[ 128, 188, 160, 222 ], \r\n[ 128, 222, 160, 256 ], \r\n[ 128, 256, 160, 290 ], \r\n[ 128, 290, 160, 324 ], \r\n[ 128, 324, 160, 358 ], \r\n[ 128, 358, 160, 392 ], \r\n[ 128, 392, 160, 426 ], \r\n[ 128, 426, 160, 460 ], \r\n[ 160, 120, 192, 154 ], \r\n[ 160, 154, 192, 188 ], \r\n[ 160, 188, 192, 222 ], \r\n[ 160, 222, 192, 256 ], \r\n[ 160, 256, 192, 290 ], \r\n[ 160, 290, 192, 324 ], \r\n[ 160, 324, 192, 358 ], \r\n[ 160, 358, 192, 392 ], \r\n[ 160, 392, 192, 426 ], \r\n[ 160, 426, 192, 460 ], \r\n[ 192, 120, 224, 154 ], \r\n[ 192, 154, 224, 188 ], \r\n[ 192, 188, 224, 222 ], \r\n[ 192, 222, 224, 256 ], \r\n[ 192, 256, 224, 290 ], \r\n[ 192, 290, 224, 324 ], \r\n[ 192, 324, 224, 358 ], \r\n[ 192, 358, 224, 392 ], \r\n[ 192, 392, 224, 426 ], \r\n[ 192, 426, 224, 460 ], \r\n[ 224, 120, 256, 154 ], \r\n[ 224, 154, 256, 188 ], \r\n[ 224, 188, 256, 222 ], \r\n[ 224, 222, 256, 256 ], \r\n[ 224, 256, 256, 290 ], \r\n[ 224, 290, 256, 324 ], \r\n[ 224, 324, 256, 358 ], \r\n[ 224, 358, 256, 392 ], \r\n[ 224, 392, 256, 426 ], \r\n[ 224, 426, 256, 460 ], \r\n[ 256, 120, 288, 154 ], \r\n[ 256, 154, 288, 188 ], \r\n[ 256, 188, 288, 222 ], \r\n[ 256, 222, 288, 256 ], \r\n[ 256, 256, 288, 290 ], \r\n[ 256, 290, 288, 324 ], \r\n[ 256, 324, 288, 358 ], \r\n[ 256, 358, 288, 392 ], \r\n[ 256, 392, 288, 426 ], \r\n[ 256, 426, 288, 460 ], \r\n[ 288, 120, 320, 154 ], \r\n[ 288, 154, 320, 188 ], \r\n[ 288, 188, 320, 222 ], \r\n[ 288, 222, 320, 256 ], \r\n[ 288, 256, 320, 290 ], \r\n[ 288, 290, 320, 324 ], \r\n[ 288, 324, 320, 358 ], \r\n[ 288, 358, 320, 392 ], \r\n[ 288, 392, 320, 426 ], \r\n[ 288, 426, 320, 460 ], \r\n[ 320, 120, 352, 154 ], \r\n[ 320, 154, 352, 188 ], \r\n[ 320, 188, 352, 222 ], \r\n[ 320, 222, 352, 256 ], \r\n[ 320, 256, 352, 290 ], \r\n[ 320, 290, 352, 324 ], \r\n[ 320, 324, 352, 358 ], \r\n[ 320, 358, 352, 392 ], \r\n[ 320, 392, 352, 426 ], \r\n[ 320, 426, 352, 460 ], \r\n[ 352, 120, 384, 154 ], \r\n[ 352, 154, 384, 188 ], \r\n[ 352, 188, 384, 222 ], \r\n[ 352, 222, 384, 256 ], \r\n[ 352, 256, 384, 290 ], \r\n[ 352, 290, 384, 324 ], \r\n[ 352, 324, 384, 358 ], \r\n[ 352, 358, 384, 392 ], \r\n[ 352, 392, 384, 426 ], \r\n[ 352, 426, 384, 460 ], \r\n[ 384, 120, 416, 154 ], \r\n[ 384, 154, 416, 188 ], \r\n[ 384, 188, 416, 222 ], \r\n[ 384, 222, 416, 256 ], \r\n[ 384, 256, 416, 290 ], \r\n[ 384, 290, 416, 324 ], \r\n[ 384, 324, 416, 358 ], \r\n[ 384, 358, 416, 392 ], \r\n[ 384, 392, 416, 426 ], \r\n[ 384, 426, 416, 460 ], \r\n[ 416, 120, 448, 154 ], \r\n[ 416, 154, 448, 188 ], \r\n[ 416, 188, 448, 222 ], \r\n[ 416, 222, 448, 256 ], \r\n[ 416, 256, 448, 290 ], \r\n[ 416, 290, 448, 324 ], \r\n[ 416, 324, 448, 358 ], \r\n[ 416, 358, 448, 392 ], \r\n[ 416, 392, 448, 426 ], \r\n[ 416, 426, 448, 460 ], \r\n[ 448, 120, 480, 154 ], \r\n[ 448, 154, 480, 188 ], \r\n[ 448, 188, 480, 222 ], \r\n[ 448, 222, 480, 256 ], \r\n[ 448, 256, 480, 290 ], \r\n[ 448, 290, 480, 324 ], \r\n[ 448, 324, 480, 358 ], \r\n[ 448, 358, 480, 392 ], \r\n[ 448, 392, 480, 426 ], \r\n[ 448, 426, 480, 460 ], \r\n[ 480, 120, 512, 154 ], \r\n[ 480, 154, 512, 188 ], \r\n[ 480, 188, 512, 222 ], \r\n[ 480, 222, 512, 256 ], \r\n[ 480, 256, 512, 290 ], \r\n[ 480, 290, 512, 324 ], \r\n[ 480, 324, 512, 358 ], \r\n[ 480, 358, 512, 392 ], \r\n[ 480, 392, 512, 426 ], \r\n[ 480, 426, 512, 460 ] ] \r\nfunction createTileMap(context: CanvasRenderingContext2D) {\r\n\r\n  showGrid(context);\r\n  document.addEventListener(\"click\", event => {\r\n\r\n    for(let i = 0 ; i < map.length;i++){\r\n      if(event.clientX>=map[i][0]&&event.clientX<=map[i][2]&&\r\n        event.clientY>=map[i][1]&&event.clientY<=map[i][3]){\r\n          points.add(JSON.stringify([map[i][0],map[i][1],32,34]))\r\n        }\r\n    }\r\n  });\r\n  for(let value of points){\r\n    //@ts-ignore\r\n    let cell = JSON.parse([value])\r\n    //@ts-ignore\r\n    context.fillRect(...cell)\r\n   }\r\n}\r\nexport function exportTiles (){\r\n  let button = document.createElement('button');\r\n  let tiles:any[] = []\r\n  button.innerText = 'Export';\r\n  document.body.appendChild(button);\r\n  button.addEventListener('click',()=>{\r\n    for(let value of points){\r\n      //@ts-ignore\r\n      let cell = JSON.parse([value])\r\n      //@ts-ignore\r\n      tiles.push([cell])\r\n     }\r\n     navigator.clipboard.writeText(`[${tiles}]`).then(()=>{console.log('copied')})\r\n  })\r\n  \r\n}\r\nexport function showTileMap(tilemap:[[number,number,number,number]],context:CanvasRenderingContext2D){\r\n  if(tilemap!==undefined){\r\n  for(let tile = 0  ;tile<tilemap.length;tile++){\r\n    context.fillRect(...tilemap[tile])\r\n  }\r\n}\r\n}\r\nexport default createTileMap;\r\n\r\n","import gameState from \"./gameState\";\r\nimport Link from \"../actors/link\";\r\nimport camera from \"./camera\";\r\nimport pauseScreen from \"./pauseScreen\";\r\nimport RootObject from \"../../objects/interfaces\";\r\nimport SpriteSheet from \"./SpriteSheet\";\r\nimport Controls from \"./controls\";\r\nimport MessageQueue from \"./messageQueue\";\r\nimport config from \"../../objects/config\";\r\nimport CollisionSystem from \"./collisionSystem\";\r\nimport createTileMap, { showTileMap } from \"../../functions/createTileMap\";\r\nimport loadImage from \"../../functions/getImage\";\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class Game\r\n * @param width The width of the game screen\r\n * @param height The hieght of the game screen\r\n * @param json A Json containing all of the games files\r\n *\r\n */\r\nexport default class Game {\r\n    width: number;\r\n    height: number;\r\n    gameState: gameState;\r\n    Link: Link;\r\n    json: RootObject;\r\n    camera: camera;\r\n    pauseScreen: pauseScreen;\r\n    images: SpriteSheet[];\r\n    controls: Controls;\r\n    messageCenter: MessageQueue;\r\n    system: CollisionSystem;\r\n    debugger: boolean;\r\n    toggle: boolean;\r\n    /**\r\n     *Creates an instance of Game.\r\n     * @param {number} width\r\n     * @param {number} height\r\n     * @param {*} json\r\n     * @memberof Game\r\n     */\r\n    constructor(width: number, height: number, json: any) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.gameState = new gameState();\r\n        this.Link = new Link();\r\n        this.controls = new Controls(config);\r\n        this.json = json;\r\n        this.system = new CollisionSystem(this)\r\n        this.camera = new camera();\r\n        this.pauseScreen = new pauseScreen(this);\r\n        this.messageCenter = new MessageQueue(this);\r\n        this.images = [];\r\n        this.debugger = false \r\n        this.toggle = true;\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @memberof Game\r\n     */\r\n    drawScreen(context: CanvasRenderingContext2D) {\r\n        const { x, y } = this.Link.position;\r\n        let link = this.Link.show();\r\n        let pauseMenu = this.pauseScreen.show(this);\r\n        let paused = this.gameState.paused ? 0 : -360;\r\n        this.system.addPlayer()\r\n        this.camera.show(this, context);\r\n        this.images[5].renderSprite(context, link, [x * 32,y * 34 + 120, 30,30,]);        \r\n        context.drawImage(pauseMenu(), 0, paused, 512, 480);\r\n        this.rungame(context);\r\n        this.debugMode(context)\r\n    }\r\n    debugMode(context:CanvasRenderingContext2D){\r\n        if(!this.debugger){\r\n            this.debugger=true\r\n            let button =document.createElement('button');\r\n            button.innerText = ' Create Tile Map'\r\n            document.body.appendChild(button);\r\n            button.addEventListener('click',()=>{\r\n                this.toggle = !this.toggle\r\n            })\r\n        }\r\n        if(this.toggle){\r\n            createTileMap(context)\r\n        }else{\r\n            let index:string = `${this.gameState.currentMap.position.x},${this.gameState.currentMap.position.y}`\r\n\r\n            showTileMap(this.json.tileMap[index],context)\r\n        }\r\n    }\r\n\r\n    rungame(context:CanvasRenderingContext2D) {\r\n        this.gameState.changeMap(this.Link.position);\r\n        this.controls.setupControls(this.messageCenter);\r\n        this.messageCenter.dispatch();\r\n        this.gameState.changeScreen(this.Link.position,this);\r\n    }\r\n    /**\r\n     *\r\n     *\r\n     * @memberof Game\r\n     */\r\n    loadFiles() {\r\n        let iterator = 0;\r\n        let names = Object.keys(this.json.urls);\r\n        let images = Object.values(this.json.urls).map(url => loadImage(url));\r\n        Promise.all(images).then((response: HTMLImageElement[]) => {\r\n            response.forEach(res => {\r\n                let spriteSheet = new SpriteSheet(res, names[iterator]);\r\n                if (names[iterator] == \"link\") {\r\n                    spriteSheet.makeSprites(this.json);\r\n                }\r\n                this.images.push(spriteSheet);\r\n                iterator++;\r\n            });\r\n        });\r\n    }\r\n}\r\n"," /**\r\n  *\r\n  *\r\n  * @param {string} url\r\n  */\r\n const loadJson = async (url: string)=> await (await fetch(url)).json();\r\nexport default loadJson\r\n\r\n","import makeCanvas from \"./components/functions/canvas\";\r\nimport Game from \"./components/classes/systems/game\";\r\nimport loadJson from \"./components/functions/getjson\";\r\nimport { exportTiles } from \"./components/functions/createTileMap\";\r\n\r\nlet canvas = makeCanvas() as HTMLCanvasElement;\r\nlet ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\nlet game: Game;\r\n\r\nasync function preload() {\r\n  let data = await loadJson(\"../json/game.json\");\r\n  game = new Game(512, 480, data);\r\n  game.loadFiles();\r\n  playButton()\r\n  \r\n}\r\n\r\nfunction setup() {\r\n  canvas.width = 512;\r\n  canvas.height = 480;\r\n  let index:string = `${game.gameState.currentMap.position.x},${game.gameState.currentMap.position.y}`\r\n  game.system.makeScreen(game.json.tileMap[index])\r\n  document.body.appendChild(canvas);\r\n  exportTiles();\r\n  draw();\r\n}\r\n\r\nfunction draw() {\r\n  game.drawScreen(ctx);\r\n  loop();\r\n}\r\n\r\nfunction loop() {\r\n  requestAnimationFrame(draw);\r\n}\r\npreload();\r\n\r\n\r\nfunction playButton(){\r\n  let button = document.createElement(\"button\");\r\n  button.innerText = \"Play Game\";\r\n  document.body.appendChild(button);\r\n  button.addEventListener(\"click\", () => {\r\n    game.gameState.currentMap.theme.play();\r\n    setup();\r\n\t\tdocument.body.removeChild(button);\r\n\t});\r\n}\r\n\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}